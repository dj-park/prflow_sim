// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 



module dut (
  input [63:0] Loop_VITIS_LOOP_39_1_proc1_U0_v1_buffer_V_din,
  input Loop_VITIS_LOOP_39_1_proc1_U0_v1_buffer_V_write,
  output v1_buffer_V_full_n,
  input [511:0] Loop_VITIS_LOOP_43_3_proc3_U0_v2_buffer_V_din ,
  input Loop_VITIS_LOOP_43_3_proc3_U0_v2_buffer_V_write,
  output v2_buffer_V_full_n,
  output [63:0] v1_buffer_V_dout,
  output v1_buffer_V_empty_n,
  input Loop_VITIS_LOOP_40_2_proc2_U0_v1_buffer_V_read,
  output [511:0] v2_buffer_V_dout, // data out
  output v2_buffer_V_empty_n,
  input Loop_VITIS_LOOP_44_4_proc4_U0_v2_buffer_V_read,
  
  output [63:0] v3_buffer_V_dout, // full cnt data
  output v3_buffer_V_empty_n,
  input v3_buffer_V_read,

  input ap_rst_n,
  input ap_clk,
  input ap_start,

  input clk_user,
  input rst_n_user
);


wire ap_rst_n_inv;

wire ap_rst_n_inv_bft;
wire ap_rst_n_inv_p0;
wire ap_rst_n_inv_p1;
wire ap_rst_n_inv_p2;
wire ap_rst_n_inv_p3;
wire ap_rst_n_inv_p4;
wire ap_rst_n_inv_p5;
wire ap_rst_n_inv_p6;
wire ap_rst_n_inv_p7;
wire ap_rst_n_inv_p8;
wire ap_rst_n_inv_p9;
wire ap_rst_n_inv_p10;
wire ap_rst_n_inv_p11;
wire ap_rst_n_inv_p12;
wire ap_rst_n_inv_p13;
wire ap_rst_n_inv_p14;
wire ap_rst_n_inv_p15;
wire ap_rst_n_inv_p16;
wire ap_rst_n_inv_p17;
wire ap_rst_n_inv_p18;
wire ap_rst_n_inv_p19;
wire ap_rst_n_inv_p20;
wire ap_rst_n_inv_p21;
wire ap_rst_n_inv_p22;
wire ap_rst_n_inv_p23;

assign ap_rst_n_inv = ~ap_rst_n;
assign ap_rst_n_inv_bft = ~ap_rst_n;
assign ap_rst_n_inv_p0 = ~ap_rst_n;
assign ap_rst_n_inv_p1 = ~ap_rst_n;

assign ap_rst_n_inv_p2 = ~ap_rst_n;
assign ap_rst_n_inv_p3 = ~ap_rst_n;
assign ap_rst_n_inv_p4 = ~ap_rst_n;
assign ap_rst_n_inv_p5 = ~ap_rst_n;
assign ap_rst_n_inv_p6 = ~ap_rst_n;
assign ap_rst_n_inv_p7 = ~ap_rst_n;
assign ap_rst_n_inv_p8 = ~ap_rst_n;
assign ap_rst_n_inv_p9 = ~ap_rst_n;
assign ap_rst_n_inv_p10 = ~ap_rst_n;
assign ap_rst_n_inv_p11 = ~ap_rst_n;
assign ap_rst_n_inv_p12 = ~ap_rst_n;
assign ap_rst_n_inv_p13 = ~ap_rst_n;
assign ap_rst_n_inv_p14 = ~ap_rst_n;
assign ap_rst_n_inv_p15 = ~ap_rst_n;
assign ap_rst_n_inv_p16 = ~ap_rst_n;
assign ap_rst_n_inv_p17 = ~ap_rst_n;
assign ap_rst_n_inv_p18 = ~ap_rst_n;
assign ap_rst_n_inv_p19 = ~ap_rst_n;
assign ap_rst_n_inv_p20 = ~ap_rst_n;
assign ap_rst_n_inv_p21 = ~ap_rst_n;
assign ap_rst_n_inv_p22 = ~ap_rst_n;
assign ap_rst_n_inv_p23 = ~ap_rst_n;


///////////

wire rst_n_inv_user_p2;
wire rst_n_inv_user_p3;
wire rst_n_inv_user_p4;
wire rst_n_inv_user_p5;
wire rst_n_inv_user_p6;
wire rst_n_inv_user_p7;
wire rst_n_inv_user_p8;
wire rst_n_inv_user_p9;
wire rst_n_inv_user_p10;
wire rst_n_inv_user_p11;
wire rst_n_inv_user_p12;
wire rst_n_inv_user_p13;
wire rst_n_inv_user_p14;
wire rst_n_inv_user_p15;
wire rst_n_inv_user_p16;
wire rst_n_inv_user_p17;
wire rst_n_inv_user_p18;
wire rst_n_inv_user_p19;
wire rst_n_inv_user_p20;
wire rst_n_inv_user_p21;
wire rst_n_inv_user_p22;
wire rst_n_inv_user_p23;

assign rst_n_inv_user_p2 = ~rst_n_user;
assign rst_n_inv_user_p3 = ~rst_n_user;
assign rst_n_inv_user_p4 = ~rst_n_user;
assign rst_n_inv_user_p5 = ~rst_n_user;
assign rst_n_inv_user_p6 = ~rst_n_user;
assign rst_n_inv_user_p7 = ~rst_n_user;
assign rst_n_inv_user_p8 = ~rst_n_user;
assign rst_n_inv_user_p9 = ~rst_n_user;
assign rst_n_inv_user_p10 = ~rst_n_user;
assign rst_n_inv_user_p11 = ~rst_n_user;
assign rst_n_inv_user_p12 = ~rst_n_user;
assign rst_n_inv_user_p13 = ~rst_n_user;
assign rst_n_inv_user_p14 = ~rst_n_user;
assign rst_n_inv_user_p15 = ~rst_n_user;
assign rst_n_inv_user_p16 = ~rst_n_user;
assign rst_n_inv_user_p17 = ~rst_n_user;
assign rst_n_inv_user_p18 = ~rst_n_user;
assign rst_n_inv_user_p19 = ~rst_n_user;
assign rst_n_inv_user_p20 = ~rst_n_user;
assign rst_n_inv_user_p21 = ~rst_n_user;
assign rst_n_inv_user_p22 = ~rst_n_user;
assign rst_n_inv_user_p23 = ~rst_n_user;
///////////

wire [48:0] din_leaf_0_bft;
wire [48:0] din_leaf_1_bft;
wire [48:0] din_leaf_2_bft;
wire [48:0] din_leaf_3_bft;
wire [48:0] din_leaf_4_bft;
wire [48:0] din_leaf_5_bft;
wire [48:0] din_leaf_6_bft;
wire [48:0] din_leaf_7_bft;
wire [48:0] din_leaf_8_bft;
wire [48:0] din_leaf_9_bft;
wire [48:0] din_leaf_10_bft;
wire [48:0] din_leaf_11_bft;
wire [48:0] din_leaf_12_bft;
wire [48:0] din_leaf_13_bft;
wire [48:0] din_leaf_14_bft;
wire [48:0] din_leaf_15_bft;
wire [48:0] din_leaf_16_bft;
wire [48:0] din_leaf_17_bft;
wire [48:0] din_leaf_18_bft;
wire [48:0] din_leaf_19_bft;
wire [48:0] din_leaf_20_bft;
wire [48:0] din_leaf_21_bft;
wire [48:0] din_leaf_22_bft;
wire [48:0] din_leaf_23_bft;
wire [48:0] din_leaf_24_bft;
wire [48:0] din_leaf_25_bft;
wire [48:0] din_leaf_26_bft;
wire [48:0] din_leaf_27_bft;
wire [48:0] din_leaf_28_bft;
wire [48:0] din_leaf_29_bft;
wire [48:0] din_leaf_30_bft;
wire [48:0] din_leaf_31_bft;

reg [48:0] din_leaf_0_reg, din_leaf_0_reg_2;
reg [48:0] din_leaf_1_reg, din_leaf_1_reg_2;
reg [48:0] din_leaf_2_reg, din_leaf_2_reg_2;
reg [48:0] din_leaf_3_reg, din_leaf_3_reg_2;
reg [48:0] din_leaf_4_reg, din_leaf_4_reg_2;
reg [48:0] din_leaf_5_reg, din_leaf_5_reg_2;
reg [48:0] din_leaf_6_reg, din_leaf_6_reg_2;
reg [48:0] din_leaf_7_reg, din_leaf_7_reg_2;
reg [48:0] din_leaf_8_reg, din_leaf_8_reg_2;
reg [48:0] din_leaf_9_reg, din_leaf_9_reg_2;
reg [48:0] din_leaf_10_reg, din_leaf_10_reg_2;
reg [48:0] din_leaf_11_reg, din_leaf_11_reg_2;
reg [48:0] din_leaf_12_reg, din_leaf_12_reg_2;
reg [48:0] din_leaf_13_reg, din_leaf_13_reg_2;
reg [48:0] din_leaf_14_reg, din_leaf_14_reg_2;
reg [48:0] din_leaf_15_reg, din_leaf_15_reg_2;
reg [48:0] din_leaf_16_reg, din_leaf_16_reg_2;
reg [48:0] din_leaf_17_reg, din_leaf_17_reg_2;
reg [48:0] din_leaf_18_reg, din_leaf_18_reg_2;
reg [48:0] din_leaf_19_reg, din_leaf_19_reg_2;
reg [48:0] din_leaf_20_reg, din_leaf_20_reg_2;
reg [48:0] din_leaf_21_reg, din_leaf_21_reg_2;
reg [48:0] din_leaf_22_reg, din_leaf_22_reg_2;
reg [48:0] din_leaf_23_reg, din_leaf_23_reg_2;
reg [48:0] din_leaf_24_reg, din_leaf_24_reg_2;
reg [48:0] din_leaf_25_reg, din_leaf_25_reg_2;
reg [48:0] din_leaf_26_reg, din_leaf_26_reg_2;
reg [48:0] din_leaf_27_reg, din_leaf_27_reg_2;
reg [48:0] din_leaf_28_reg, din_leaf_28_reg_2;
reg [48:0] din_leaf_29_reg, din_leaf_29_reg_2;
reg [48:0] din_leaf_30_reg, din_leaf_30_reg_2;
reg [48:0] din_leaf_31_reg, din_leaf_31_reg_2;

wire [48:0] din_leaf_0;
wire [48:0] din_leaf_1;
wire [48:0] din_leaf_2;
wire [48:0] din_leaf_3;
wire [48:0] din_leaf_4;
wire [48:0] din_leaf_5;
wire [48:0] din_leaf_6;
wire [48:0] din_leaf_7;
wire [48:0] din_leaf_8;
wire [48:0] din_leaf_9;
wire [48:0] din_leaf_10;
wire [48:0] din_leaf_11;
wire [48:0] din_leaf_12;
wire [48:0] din_leaf_13;
wire [48:0] din_leaf_14;
wire [48:0] din_leaf_15;
wire [48:0] din_leaf_16;
wire [48:0] din_leaf_17;
wire [48:0] din_leaf_18;
wire [48:0] din_leaf_19;
wire [48:0] din_leaf_20;
wire [48:0] din_leaf_21;
wire [48:0] din_leaf_22;
wire [48:0] din_leaf_23;
wire [48:0] din_leaf_24;
wire [48:0] din_leaf_25;
wire [48:0] din_leaf_26;
wire [48:0] din_leaf_27;
wire [48:0] din_leaf_28;
wire [48:0] din_leaf_29;
wire [48:0] din_leaf_30;
wire [48:0] din_leaf_31;



wire [48:0] dout_leaf_0_bft;
wire [48:0] dout_leaf_1_bft;
wire [48:0] dout_leaf_2_bft;
wire [48:0] dout_leaf_3_bft;
wire [48:0] dout_leaf_4_bft;
wire [48:0] dout_leaf_5_bft;
wire [48:0] dout_leaf_6_bft;
wire [48:0] dout_leaf_7_bft;
wire [48:0] dout_leaf_8_bft;
wire [48:0] dout_leaf_9_bft;
wire [48:0] dout_leaf_10_bft;
wire [48:0] dout_leaf_11_bft;
wire [48:0] dout_leaf_12_bft;
wire [48:0] dout_leaf_13_bft;
wire [48:0] dout_leaf_14_bft;
wire [48:0] dout_leaf_15_bft;
wire [48:0] dout_leaf_16_bft;
wire [48:0] dout_leaf_17_bft;
wire [48:0] dout_leaf_18_bft;
wire [48:0] dout_leaf_19_bft;
wire [48:0] dout_leaf_20_bft;
wire [48:0] dout_leaf_21_bft;
wire [48:0] dout_leaf_22_bft;
wire [48:0] dout_leaf_23_bft;
wire [48:0] dout_leaf_24_bft;
wire [48:0] dout_leaf_25_bft;
wire [48:0] dout_leaf_26_bft;
wire [48:0] dout_leaf_27_bft;
wire [48:0] dout_leaf_28_bft;
wire [48:0] dout_leaf_29_bft;
wire [48:0] dout_leaf_30_bft;
wire [48:0] dout_leaf_31_bft;

reg [48:0] dout_leaf_0_reg, dout_leaf_0_reg_2;
reg [48:0] dout_leaf_1_reg, dout_leaf_1_reg_2;
reg [48:0] dout_leaf_2_reg, dout_leaf_2_reg_2;
reg [48:0] dout_leaf_3_reg, dout_leaf_3_reg_2;
reg [48:0] dout_leaf_4_reg, dout_leaf_4_reg_2;
reg [48:0] dout_leaf_5_reg, dout_leaf_5_reg_2;
reg [48:0] dout_leaf_6_reg, dout_leaf_6_reg_2;
reg [48:0] dout_leaf_7_reg, dout_leaf_7_reg_2;
reg [48:0] dout_leaf_8_reg, dout_leaf_8_reg_2;
reg [48:0] dout_leaf_9_reg, dout_leaf_9_reg_2;
reg [48:0] dout_leaf_10_reg, dout_leaf_10_reg_2;
reg [48:0] dout_leaf_11_reg, dout_leaf_11_reg_2;
reg [48:0] dout_leaf_12_reg, dout_leaf_12_reg_2;
reg [48:0] dout_leaf_13_reg, dout_leaf_13_reg_2;
reg [48:0] dout_leaf_14_reg, dout_leaf_14_reg_2;
reg [48:0] dout_leaf_15_reg, dout_leaf_15_reg_2;
reg [48:0] dout_leaf_16_reg, dout_leaf_16_reg_2;
reg [48:0] dout_leaf_17_reg, dout_leaf_17_reg_2;
reg [48:0] dout_leaf_18_reg, dout_leaf_18_reg_2;
reg [48:0] dout_leaf_19_reg, dout_leaf_19_reg_2;
reg [48:0] dout_leaf_20_reg, dout_leaf_20_reg_2;
reg [48:0] dout_leaf_21_reg, dout_leaf_21_reg_2;
reg [48:0] dout_leaf_22_reg, dout_leaf_22_reg_2;
reg [48:0] dout_leaf_23_reg, dout_leaf_23_reg_2;
reg [48:0] dout_leaf_24_reg, dout_leaf_24_reg_2;
reg [48:0] dout_leaf_25_reg, dout_leaf_25_reg_2;
reg [48:0] dout_leaf_26_reg, dout_leaf_26_reg_2;
reg [48:0] dout_leaf_27_reg, dout_leaf_27_reg_2;
reg [48:0] dout_leaf_28_reg, dout_leaf_28_reg_2;
reg [48:0] dout_leaf_29_reg, dout_leaf_29_reg_2;
reg [48:0] dout_leaf_30_reg, dout_leaf_30_reg_2;
reg [48:0] dout_leaf_31_reg, dout_leaf_31_reg_2;

wire [48:0] dout_leaf_0;
wire [48:0] dout_leaf_1;
wire [48:0] dout_leaf_2;
wire [48:0] dout_leaf_3;
wire [48:0] dout_leaf_4;
wire [48:0] dout_leaf_5;
wire [48:0] dout_leaf_6;
wire [48:0] dout_leaf_7;
wire [48:0] dout_leaf_8;
wire [48:0] dout_leaf_9;
wire [48:0] dout_leaf_10;
wire [48:0] dout_leaf_11;
wire [48:0] dout_leaf_12;
wire [48:0] dout_leaf_13;
wire [48:0] dout_leaf_14;
wire [48:0] dout_leaf_15;
wire [48:0] dout_leaf_16;
wire [48:0] dout_leaf_17;
wire [48:0] dout_leaf_18;
wire [48:0] dout_leaf_19;
wire [48:0] dout_leaf_20;
wire [48:0] dout_leaf_21;
wire [48:0] dout_leaf_22;
wire [48:0] dout_leaf_23;
wire [48:0] dout_leaf_24;
wire [48:0] dout_leaf_25;
wire [48:0] dout_leaf_26;
wire [48:0] dout_leaf_27;
wire [48:0] dout_leaf_28;
wire [48:0] dout_leaf_29;
wire [48:0] dout_leaf_30;
wire [48:0] dout_leaf_31;



wire resend_0_bft;
wire resend_1_bft;
wire resend_2_bft;
wire resend_3_bft;
wire resend_4_bft;
wire resend_5_bft;
wire resend_6_bft;
wire resend_7_bft;
wire resend_8_bft;
wire resend_9_bft;
wire resend_10_bft;
wire resend_11_bft;
wire resend_12_bft;
wire resend_13_bft;
wire resend_14_bft;
wire resend_15_bft;
wire resend_16_bft;
wire resend_17_bft;
wire resend_18_bft;
wire resend_19_bft;
wire resend_20_bft;
wire resend_21_bft;
wire resend_22_bft;
wire resend_23_bft;
wire resend_24_bft;
wire resend_25_bft;
wire resend_26_bft;
wire resend_27_bft;
wire resend_28_bft;
wire resend_29_bft;
wire resend_30_bft;
wire resend_31_bft;

reg resend_0_reg, resend_0_reg_2;
reg resend_1_reg, resend_1_reg_2;
reg resend_2_reg, resend_2_reg_2;
reg resend_3_reg, resend_3_reg_2;
reg resend_4_reg, resend_4_reg_2;
reg resend_5_reg, resend_5_reg_2;
reg resend_6_reg, resend_6_reg_2;
reg resend_7_reg, resend_7_reg_2;
reg resend_8_reg, resend_8_reg_2;
reg resend_9_reg, resend_9_reg_2;
reg resend_10_reg, resend_10_reg_2;
reg resend_11_reg, resend_11_reg_2;
reg resend_12_reg, resend_12_reg_2;
reg resend_13_reg, resend_13_reg_2;
reg resend_14_reg, resend_14_reg_2;
reg resend_15_reg, resend_15_reg_2;
reg resend_16_reg, resend_16_reg_2;
reg resend_17_reg, resend_17_reg_2;
reg resend_18_reg, resend_18_reg_2;
reg resend_19_reg, resend_19_reg_2;
reg resend_20_reg, resend_20_reg_2;
reg resend_21_reg, resend_21_reg_2;
reg resend_22_reg, resend_22_reg_2;
reg resend_23_reg, resend_23_reg_2;
reg resend_24_reg, resend_24_reg_2;
reg resend_25_reg, resend_25_reg_2;
reg resend_26_reg, resend_26_reg_2;
reg resend_27_reg, resend_27_reg_2;
reg resend_28_reg, resend_28_reg_2;
reg resend_29_reg, resend_29_reg_2;
reg resend_30_reg, resend_30_reg_2;
reg resend_31_reg, resend_31_reg_2;

wire resend_0;
wire resend_1;
wire resend_2;
wire resend_3;
wire resend_4;
wire resend_5;
wire resend_6;
wire resend_7;
wire resend_8;
wire resend_9;
wire resend_10;
wire resend_11;
wire resend_12;
wire resend_13;
wire resend_14;
wire resend_15;
wire resend_16;
wire resend_17;
wire resend_18;
wire resend_19;
wire resend_20;
wire resend_21;
wire resend_22;
wire resend_23;
wire resend_24;
wire resend_25;
wire resend_26;
wire resend_27;
wire resend_28;
wire resend_29;
wire resend_30;
wire resend_31;


wire [31:0] tdata1;
wire        tvalid1;
wire        tready1;

wire [31:0] tdata2;
wire        tvalid2;
wire        tready2;

wire [63:0] tdata3;
wire        tvalid3;
wire        tready3;


wire [7:0] is_done_output_size;
wire is_done_output_size_valid;
wire is_done_output_size_ack;

wire [31:0] output_size;
wire  output_size_valid;
wire [15:0] num_cnt_read;
wire  num_cnt_read_valid;

config_parser config_parser_inst(
    .ap_clk(ap_clk),
    .ap_rst_n(ap_rst_n),
    .ap_start(1'b1),
    .ap_done(),
    .ap_idle(),
    .ap_ready(),
    .input1_TDATA(Loop_VITIS_LOOP_39_1_proc1_U0_v1_buffer_V_din),
    .input1_TVALID(Loop_VITIS_LOOP_39_1_proc1_U0_v1_buffer_V_write),
    .input1_TREADY(v1_buffer_V_full_n),
    .input2_TDATA(Loop_VITIS_LOOP_43_3_proc3_U0_v2_buffer_V_din),
    .input2_TVALID(Loop_VITIS_LOOP_43_3_proc3_U0_v2_buffer_V_write),
    .input2_TREADY(v2_buffer_V_full_n),
    .input3_TDATA(is_done_output_size),
    .input3_TVALID(is_done_output_size_valid),
    .input3_TREADY(is_done_output_size_ack),
    .output1_TDATA(tdata3),
    .output1_TVALID(tvalid3), // data 
    .output1_TREADY(~resend_0),
    .output2_TDATA(tdata1),
    .output2_TVALID(tvalid1),
    .output2_TREADY(tready1),
    .output3_TDATA(output_size),
    .output3_TVALID(output_size_valid),
    .output3_TREADY(1'b1), // always ready
    .output4_TDATA(num_cnt_read),
    .output4_TVALID(num_cnt_read_valid),
    .output4_TREADY(1'b1) // always ready
    
    // .output3_V_TDATA(v1_buffer_V_dout),
    // .output3_V_TVALID(v1_buffer_V_empty_n),
    // .output3_V_TREADY(Loop_VITIS_LOOP_40_2_proc2_U0_v1_buffer_V_read)
);

data32to512 data32to512_inst(
    .ap_clk(ap_clk),
    .ap_rst_n(ap_rst_n),
    .ap_start(1'b1),
    .ap_done(),
    .ap_idle(),
    .ap_ready(),
    .Input_1_V_TDATA(tdata2),
    .Input_1_V_TVALID(tvalid2),
    .Input_1_V_TREADY(tready2),
    .Output_1_V_TDATA(v2_buffer_V_dout),
    .Output_1_V_TVALID(v2_buffer_V_empty_n),
    .Output_1_V_TREADY(Loop_VITIS_LOOP_44_4_proc4_U0_v2_buffer_V_read)
);

InterfaceWrapper1 InterfaceWrapper1_inst(
    .clk(ap_clk),
    .din_leaf_bft2interface(din_leaf_1),
    .dout_leaf_interface2bft(dout_leaf_1),
    .resend(resend_1),
    .Input_1_V_V(tdata1),
    .Input_1_V_V_ap_vld(tvalid1),
    .Input_1_V_V_ap_ack(tready1),
    .Output_1_V_V(tdata2),
    .Output_1_V_V_ap_vld(tvalid2),
    .Output_1_V_V_ap_ack(tready2),
    
    .cnt(v3_buffer_V_dout),
    .cnt_vld(v3_buffer_V_empty_n),
    .cnt_ack(v3_buffer_V_read),
    
    .output_size(output_size),
    .output_size_valid(output_size_valid),
    .num_cnt_read(num_cnt_read), // added
    .num_cnt_read_valid(num_cnt_read_valid), // added        
    .is_done_output_size(is_done_output_size), // added
    .is_done_output_size_valid(is_done_output_size_valid), // added
    
    .reset(ap_rst_n_inv_p1),
    .ap_start(ap_start)
    );


assign din_leaf_0 = din_leaf_0_reg_2;
assign din_leaf_1 = din_leaf_1_reg_2;
assign din_leaf_2 = din_leaf_2_reg_2;
assign din_leaf_3 = din_leaf_3_reg_2;
assign din_leaf_4 = din_leaf_4_reg_2;
assign din_leaf_5 = din_leaf_5_reg_2;
assign din_leaf_6 = din_leaf_6_reg_2;
assign din_leaf_7 = din_leaf_7_reg_2;
assign din_leaf_8 = din_leaf_8_reg_2;
assign din_leaf_9 = din_leaf_9_reg_2;
assign din_leaf_10 = din_leaf_10_reg_2;
assign din_leaf_11 = din_leaf_11_reg_2;
assign din_leaf_12 = din_leaf_12_reg_2;
assign din_leaf_13 = din_leaf_13_reg_2;
assign din_leaf_14 = din_leaf_14_reg_2;
assign din_leaf_15 = din_leaf_15_reg_2;
assign din_leaf_16 = din_leaf_16_reg_2;
assign din_leaf_17 = din_leaf_17_reg_2;
assign din_leaf_18 = din_leaf_18_reg_2;
assign din_leaf_19 = din_leaf_19_reg_2;
assign din_leaf_20 = din_leaf_20_reg_2;
assign din_leaf_21 = din_leaf_21_reg_2;
assign din_leaf_22 = din_leaf_22_reg_2;
assign din_leaf_23 = din_leaf_23_reg_2;

assign resend_0 = resend_0_reg_2;
assign resend_1 = resend_1_reg_2;
assign resend_2 = resend_2_reg_2;
assign resend_3 = resend_3_reg_2;
assign resend_4 = resend_4_reg_2;
assign resend_5 = resend_5_reg_2;
assign resend_6 = resend_6_reg_2;
assign resend_7 = resend_7_reg_2;
assign resend_8 = resend_8_reg_2;
assign resend_9 = resend_9_reg_2;
assign resend_10 = resend_10_reg_2;
assign resend_11 = resend_11_reg_2;
assign resend_12 = resend_12_reg_2;
assign resend_13 = resend_13_reg_2;
assign resend_14 = resend_14_reg_2;
assign resend_15 = resend_15_reg_2;
assign resend_16 = resend_16_reg_2;
assign resend_17 = resend_17_reg_2;
assign resend_18 = resend_18_reg_2;
assign resend_19 = resend_19_reg_2;
assign resend_20 = resend_20_reg_2;
assign resend_21 = resend_21_reg_2;
assign resend_22 = resend_22_reg_2;
assign resend_23 = resend_23_reg_2;

assign dout_leaf_0_bft = dout_leaf_0_reg;
assign dout_leaf_1_bft = dout_leaf_1_reg;
assign dout_leaf_2_bft = dout_leaf_2_reg;
assign dout_leaf_3_bft = dout_leaf_3_reg;
assign dout_leaf_4_bft = dout_leaf_4_reg;
assign dout_leaf_5_bft = dout_leaf_5_reg;
assign dout_leaf_6_bft = dout_leaf_6_reg;
assign dout_leaf_7_bft = dout_leaf_7_reg;
assign dout_leaf_8_bft = dout_leaf_8_reg;
assign dout_leaf_9_bft = dout_leaf_9_reg;
assign dout_leaf_10_bft = dout_leaf_10_reg;
assign dout_leaf_11_bft = dout_leaf_11_reg;
assign dout_leaf_12_bft = dout_leaf_12_reg;
assign dout_leaf_13_bft = dout_leaf_13_reg;
assign dout_leaf_14_bft = dout_leaf_14_reg;
assign dout_leaf_15_bft = dout_leaf_15_reg;
assign dout_leaf_16_bft = dout_leaf_16_reg;
assign dout_leaf_17_bft = dout_leaf_17_reg;
assign dout_leaf_18_bft = dout_leaf_18_reg;
assign dout_leaf_19_bft = dout_leaf_19_reg;
assign dout_leaf_20_bft = dout_leaf_20_reg;
assign dout_leaf_21_bft = dout_leaf_21_reg;
assign dout_leaf_22_bft = dout_leaf_22_reg;
assign dout_leaf_23_bft = dout_leaf_23_reg;


    always @ (posedge ap_clk) begin 
        if (ap_rst_n_inv == 1'b1) begin
            din_leaf_0_reg <= 0;
            din_leaf_1_reg <= 0;
            din_leaf_2_reg <= 0;
            din_leaf_3_reg <= 0;
            din_leaf_4_reg <= 0;
            din_leaf_5_reg <= 0;
            din_leaf_6_reg <= 0;
            din_leaf_7_reg <= 0;
            din_leaf_8_reg <= 0;
            din_leaf_9_reg <= 0;
            din_leaf_10_reg <= 0;
            din_leaf_11_reg <= 0;
            din_leaf_12_reg <= 0;
            din_leaf_13_reg <= 0;
            din_leaf_14_reg <= 0;
            din_leaf_15_reg <= 0;
            din_leaf_16_reg <= 0;
            din_leaf_17_reg <= 0;
            din_leaf_18_reg <= 0;
            din_leaf_19_reg <= 0;
            din_leaf_20_reg <= 0;
            din_leaf_21_reg <= 0;
            din_leaf_22_reg <= 0;
            din_leaf_23_reg <= 0;

            resend_0_reg <= 0;
            resend_1_reg <= 0;
            resend_2_reg <= 0;
            resend_3_reg <= 0;
            resend_4_reg <= 0;
            resend_5_reg <= 0;
            resend_6_reg <= 0;
            resend_7_reg <= 0;
            resend_8_reg <= 0;
            resend_9_reg <= 0;
            resend_10_reg <= 0;
            resend_11_reg <= 0;
            resend_12_reg <= 0;
            resend_13_reg <= 0;
            resend_14_reg <= 0;
            resend_15_reg <= 0;
            resend_16_reg <= 0;
            resend_17_reg <= 0;
            resend_18_reg <= 0;
            resend_19_reg <= 0;
            resend_20_reg <= 0;
            resend_21_reg <= 0;
            resend_22_reg <= 0;
            resend_23_reg <= 0;

            dout_leaf_0_reg <= 0;
            dout_leaf_1_reg <= 0;
            dout_leaf_2_reg <= 0;
            dout_leaf_3_reg <= 0;
            dout_leaf_4_reg <= 0;
            dout_leaf_5_reg <= 0;
            dout_leaf_6_reg <= 0;
            dout_leaf_7_reg <= 0;
            dout_leaf_8_reg <= 0;
            dout_leaf_9_reg <= 0;
            dout_leaf_10_reg <= 0;
            dout_leaf_11_reg <= 0;
            dout_leaf_12_reg <= 0;
            dout_leaf_13_reg <= 0;
            dout_leaf_14_reg <= 0;
            dout_leaf_15_reg <= 0;
            dout_leaf_16_reg <= 0;
            dout_leaf_17_reg <= 0;
            dout_leaf_18_reg <= 0;
            dout_leaf_19_reg <= 0;
            dout_leaf_20_reg <= 0;
            dout_leaf_21_reg <= 0;
            dout_leaf_22_reg <= 0;
            dout_leaf_23_reg <= 0;
        end
        else begin
            din_leaf_0_reg <= din_leaf_0_bft;
            din_leaf_1_reg <= din_leaf_1_bft;
            din_leaf_2_reg <= din_leaf_2_bft; 
            din_leaf_3_reg <= din_leaf_3_bft; 
            din_leaf_4_reg <= din_leaf_4_bft; 
            din_leaf_5_reg <= din_leaf_5_bft; 
            din_leaf_6_reg <= din_leaf_6_bft; 
            din_leaf_7_reg <= din_leaf_7_bft; 
            din_leaf_8_reg <= din_leaf_8_bft; 
            din_leaf_9_reg <= din_leaf_9_bft; 
            din_leaf_10_reg <= din_leaf_10_bft; 
            din_leaf_11_reg <= din_leaf_11_bft; 
            din_leaf_12_reg <= din_leaf_12_bft; 
            din_leaf_13_reg <= din_leaf_13_bft; 
            din_leaf_14_reg <= din_leaf_14_bft; 
            din_leaf_15_reg <= din_leaf_15_bft; 
            din_leaf_16_reg <= din_leaf_16_bft; 
            din_leaf_17_reg <= din_leaf_17_bft; 
            din_leaf_18_reg <= din_leaf_18_bft; 
            din_leaf_19_reg <= din_leaf_19_bft; 
            din_leaf_20_reg <= din_leaf_20_bft; 
            din_leaf_21_reg <= din_leaf_21_bft; 
            din_leaf_22_reg <= din_leaf_22_bft; 
            din_leaf_23_reg <= din_leaf_23_bft; 

            resend_0_reg <= resend_0_bft;
            resend_1_reg <= resend_1_bft;
            resend_2_reg <= resend_2_bft; 
            resend_3_reg <= resend_3_bft; 
            resend_4_reg <= resend_4_bft; 
            resend_5_reg <= resend_5_bft; 
            resend_6_reg <= resend_6_bft; 
            resend_7_reg <= resend_7_bft; 
            resend_8_reg <= resend_8_bft; 
            resend_9_reg <= resend_9_bft; 
            resend_10_reg <= resend_10_bft; 
            resend_11_reg <= resend_11_bft; 
            resend_12_reg <= resend_12_bft; 
            resend_13_reg <= resend_13_bft; 
            resend_14_reg <= resend_14_bft; 
            resend_15_reg <= resend_15_bft; 
            resend_16_reg <= resend_16_bft; 
            resend_17_reg <= resend_17_bft; 
            resend_18_reg <= resend_18_bft; 
            resend_19_reg <= resend_19_bft; 
            resend_20_reg <= resend_20_bft; 
            resend_21_reg <= resend_21_bft; 
            resend_22_reg <= resend_22_bft; 
            resend_23_reg <= resend_23_bft; 

            dout_leaf_0_reg <= dout_leaf_0_reg_2;
            dout_leaf_1_reg <= dout_leaf_1_reg_2; 
            dout_leaf_2_reg <= dout_leaf_2_reg_2; 
            dout_leaf_3_reg <= dout_leaf_3_reg_2;
            dout_leaf_4_reg <= dout_leaf_4_reg_2; 
            dout_leaf_5_reg <= dout_leaf_5_reg_2; 
            dout_leaf_6_reg <= dout_leaf_6_reg_2;
            dout_leaf_7_reg <= dout_leaf_7_reg_2; 
            dout_leaf_8_reg <= dout_leaf_8_reg_2; 
            dout_leaf_9_reg <= dout_leaf_9_reg_2;
            dout_leaf_10_reg <= dout_leaf_10_reg_2; 
            dout_leaf_11_reg <= dout_leaf_11_reg_2; 
            dout_leaf_12_reg <= dout_leaf_12_reg_2;
            dout_leaf_13_reg <= dout_leaf_13_reg_2; 
            dout_leaf_14_reg <= dout_leaf_14_reg_2; 
            dout_leaf_15_reg <= dout_leaf_15_reg_2;
            dout_leaf_16_reg <= dout_leaf_16_reg_2; 
            dout_leaf_17_reg <= dout_leaf_17_reg_2; 
            dout_leaf_18_reg <= dout_leaf_18_reg_2;
            dout_leaf_19_reg <= dout_leaf_19_reg_2;
            dout_leaf_20_reg <= dout_leaf_20_reg_2; 
            dout_leaf_21_reg <= dout_leaf_21_reg_2; 
            dout_leaf_22_reg <= dout_leaf_22_reg_2;
            dout_leaf_23_reg <= dout_leaf_23_reg_2;
        end
    end


    always @ (posedge ap_clk) begin 
        if (ap_rst_n_inv == 1'b1) begin
            din_leaf_0_reg_2 <= 0;
            din_leaf_1_reg_2 <= 0;
            din_leaf_2_reg_2 <= 0;
            din_leaf_3_reg_2 <= 0;
            din_leaf_4_reg_2 <= 0;
            din_leaf_5_reg_2 <= 0;
            din_leaf_6_reg_2 <= 0;
            din_leaf_7_reg_2 <= 0;
            din_leaf_8_reg_2 <= 0;
            din_leaf_9_reg_2 <= 0;
            din_leaf_10_reg_2 <= 0;
            din_leaf_11_reg_2 <= 0;
            din_leaf_12_reg_2 <= 0;
            din_leaf_13_reg_2 <= 0;
            din_leaf_14_reg_2 <= 0;
            din_leaf_15_reg_2 <= 0;
            din_leaf_16_reg_2 <= 0;
            din_leaf_17_reg_2 <= 0;
            din_leaf_18_reg_2 <= 0;
            din_leaf_19_reg_2 <= 0;
            din_leaf_20_reg_2 <= 0;
            din_leaf_21_reg_2 <= 0;
            din_leaf_22_reg_2 <= 0;
            din_leaf_23_reg_2 <= 0;

            resend_0_reg_2 <= 0;
            resend_1_reg_2 <= 0;
            resend_2_reg_2 <= 0;
            resend_3_reg_2 <= 0;
            resend_4_reg_2 <= 0;
            resend_5_reg_2 <= 0;
            resend_6_reg_2 <= 0;
            resend_7_reg_2 <= 0;
            resend_8_reg_2 <= 0;
            resend_9_reg_2 <= 0;
            resend_10_reg_2 <= 0;
            resend_11_reg_2 <= 0;
            resend_12_reg_2 <= 0;
            resend_13_reg_2 <= 0;
            resend_14_reg_2 <= 0;
            resend_15_reg_2 <= 0;
            resend_16_reg_2 <= 0;
            resend_17_reg_2 <= 0;
            resend_18_reg_2 <= 0;
            resend_19_reg_2 <= 0;
            resend_20_reg_2 <= 0;
            resend_21_reg_2 <= 0;
            resend_22_reg_2 <= 0;
            resend_23_reg_2 <= 0;

            dout_leaf_0_reg_2 <= 0;
            dout_leaf_1_reg_2 <= 0;
            dout_leaf_2_reg_2 <= 0;
            dout_leaf_3_reg_2 <= 0;
            dout_leaf_4_reg_2 <= 0;
            dout_leaf_5_reg_2 <= 0;
            dout_leaf_6_reg_2 <= 0;
            dout_leaf_7_reg_2 <= 0;
            dout_leaf_8_reg_2 <= 0;
            dout_leaf_9_reg_2 <= 0;
            dout_leaf_10_reg_2 <= 0;
            dout_leaf_11_reg_2 <= 0;
            dout_leaf_12_reg_2 <= 0;
            dout_leaf_13_reg_2 <= 0;
            dout_leaf_14_reg_2 <= 0;
            dout_leaf_15_reg_2 <= 0;
            dout_leaf_16_reg_2 <= 0;
            dout_leaf_17_reg_2 <= 0;
            dout_leaf_18_reg_2 <= 0;
            dout_leaf_19_reg_2 <= 0;
            dout_leaf_20_reg_2 <= 0;
            dout_leaf_21_reg_2 <= 0;
            dout_leaf_22_reg_2 <= 0;
            dout_leaf_23_reg_2 <= 0;
        end
        else begin
            din_leaf_0_reg_2 <= din_leaf_0_reg;
            din_leaf_1_reg_2 <= din_leaf_1_reg;
            din_leaf_2_reg_2 <= din_leaf_2_reg; 
            din_leaf_3_reg_2 <= din_leaf_3_reg; 
            din_leaf_4_reg_2 <= din_leaf_4_reg; 
            din_leaf_5_reg_2 <= din_leaf_5_reg; 
            din_leaf_6_reg_2 <= din_leaf_6_reg; 
            din_leaf_7_reg_2 <= din_leaf_7_reg; 
            din_leaf_8_reg_2 <= din_leaf_8_reg; 
            din_leaf_9_reg_2 <= din_leaf_9_reg; 
            din_leaf_10_reg_2 <= din_leaf_10_reg; 
            din_leaf_11_reg_2 <= din_leaf_11_reg; 
            din_leaf_12_reg_2 <= din_leaf_12_reg; 
            din_leaf_13_reg_2 <= din_leaf_13_reg; 
            din_leaf_14_reg_2 <= din_leaf_14_reg; 
            din_leaf_15_reg_2 <= din_leaf_15_reg; 
            din_leaf_16_reg_2 <= din_leaf_16_reg; 
            din_leaf_17_reg_2 <= din_leaf_17_reg; 
            din_leaf_18_reg_2 <= din_leaf_18_reg; 
            din_leaf_19_reg_2 <= din_leaf_19_reg; 
            din_leaf_20_reg_2 <= din_leaf_20_reg; 
            din_leaf_21_reg_2 <= din_leaf_21_reg; 
            din_leaf_22_reg_2 <= din_leaf_22_reg; 
            din_leaf_23_reg_2 <= din_leaf_23_reg; 

            resend_0_reg_2 <= resend_0_reg;
            resend_1_reg_2 <= resend_1_reg;
            resend_2_reg_2 <= resend_2_reg; 
            resend_3_reg_2 <= resend_3_reg; 
            resend_4_reg_2 <= resend_4_reg; 
            resend_5_reg_2 <= resend_5_reg; 
            resend_6_reg_2 <= resend_6_reg; 
            resend_7_reg_2 <= resend_7_reg; 
            resend_8_reg_2 <= resend_8_reg; 
            resend_9_reg_2 <= resend_9_reg; 
            resend_10_reg_2 <= resend_10_reg; 
            resend_11_reg_2 <= resend_11_reg; 
            resend_12_reg_2 <= resend_12_reg; 
            resend_13_reg_2 <= resend_13_reg; 
            resend_14_reg_2 <= resend_14_reg; 
            resend_15_reg_2 <= resend_15_reg; 
            resend_16_reg_2 <= resend_16_reg; 
            resend_17_reg_2 <= resend_17_reg; 
            resend_18_reg_2 <= resend_18_reg; 
            resend_19_reg_2 <= resend_19_reg; 
            resend_20_reg_2 <= resend_20_reg; 
            resend_21_reg_2 <= resend_21_reg; 
            resend_22_reg_2 <= resend_22_reg; 
            resend_23_reg_2 <= resend_23_reg; 

            dout_leaf_0_reg_2 <= {tvalid3, tdata3[47:0]};
            dout_leaf_1_reg_2 <= dout_leaf_1; 
            dout_leaf_2_reg_2 <= dout_leaf_2; 
            dout_leaf_3_reg_2 <= dout_leaf_3;
            dout_leaf_4_reg_2 <= dout_leaf_4; 
            dout_leaf_5_reg_2 <= dout_leaf_5; 
            dout_leaf_6_reg_2 <= dout_leaf_6;
            dout_leaf_7_reg_2 <= dout_leaf_7; 
            dout_leaf_8_reg_2 <= dout_leaf_8; 
            dout_leaf_9_reg_2 <= dout_leaf_9;
            dout_leaf_10_reg_2 <= dout_leaf_10; 
            dout_leaf_11_reg_2 <= dout_leaf_11; 
            dout_leaf_12_reg_2 <= dout_leaf_12;
            dout_leaf_13_reg_2 <= dout_leaf_13; 
            dout_leaf_14_reg_2 <= dout_leaf_14; 
            dout_leaf_15_reg_2 <= dout_leaf_15;
            dout_leaf_16_reg_2 <= dout_leaf_16; 
            dout_leaf_17_reg_2 <= dout_leaf_17; 
            dout_leaf_18_reg_2 <= dout_leaf_18;
            dout_leaf_19_reg_2 <= dout_leaf_19;
            dout_leaf_20_reg_2 <= dout_leaf_20; 
            dout_leaf_21_reg_2 <= dout_leaf_21; 
            dout_leaf_22_reg_2 <= dout_leaf_22;
            dout_leaf_23_reg_2 <= dout_leaf_23;
        end
    end

    // always @ (posedge ap_clk) begin
    //     if(resend_0) begin
    //         dout_leaf_0_reg <= dout_leaf_0_reg; 
    //     end
    //     else begin
    //         dout_leaf_0_reg <= {tvalid3, tdata3[47:0]};
    //     end

    //     if(resend_1) begin
    //         dout_leaf_1_reg <= dout_leaf_1_reg; 
    //     end
    //     else begin
    //         dout_leaf_1_reg <= dout_leaf_1; 
    //     end
    // end


(* DONT_TOUCH = "yes" *) bft bft_inst(
    .clk(ap_clk),
    .dout_leaf_0(dout_leaf_0_bft),
    .dout_leaf_1(dout_leaf_1_bft),
    .dout_leaf_2(dout_leaf_2_bft),
    .dout_leaf_3(dout_leaf_3_bft),
    .dout_leaf_4(dout_leaf_4_bft),
    .dout_leaf_5(dout_leaf_5_bft),
    .dout_leaf_6(dout_leaf_6_bft),
    .dout_leaf_7(dout_leaf_7_bft),
    .dout_leaf_8(dout_leaf_8_bft),
    .dout_leaf_9(dout_leaf_9_bft),
    .dout_leaf_10(dout_leaf_10_bft),
    .dout_leaf_11(dout_leaf_11_bft),
    .dout_leaf_12(dout_leaf_12_bft),
    .dout_leaf_13(dout_leaf_13_bft),
    .dout_leaf_14(dout_leaf_14_bft),
    .dout_leaf_15(dout_leaf_15_bft),
    .dout_leaf_16(dout_leaf_16_bft),
    .dout_leaf_17(dout_leaf_17_bft),
    .dout_leaf_18(dout_leaf_18_bft),
    .dout_leaf_19(dout_leaf_19_bft),
    .dout_leaf_20(dout_leaf_20_bft),
    .dout_leaf_21(dout_leaf_21_bft),
    .dout_leaf_22(dout_leaf_22_bft),
    .dout_leaf_23(dout_leaf_23_bft),

    .din_leaf_0(din_leaf_0_bft),
    .din_leaf_1(din_leaf_1_bft),
    .din_leaf_2(din_leaf_2_bft),
    .din_leaf_3(din_leaf_3_bft),
    .din_leaf_4(din_leaf_4_bft),
    .din_leaf_5(din_leaf_5_bft),
    .din_leaf_6(din_leaf_6_bft),
    .din_leaf_7(din_leaf_7_bft),
    .din_leaf_8(din_leaf_8_bft),
    .din_leaf_9(din_leaf_9_bft),
    .din_leaf_10(din_leaf_10_bft),
    .din_leaf_11(din_leaf_11_bft),
    .din_leaf_12(din_leaf_12_bft),
    .din_leaf_13(din_leaf_13_bft),
    .din_leaf_14(din_leaf_14_bft),
    .din_leaf_15(din_leaf_15_bft),
    .din_leaf_16(din_leaf_16_bft),
    .din_leaf_17(din_leaf_17_bft),
    .din_leaf_18(din_leaf_18_bft),
    .din_leaf_19(din_leaf_19_bft),
    .din_leaf_20(din_leaf_20_bft),
    .din_leaf_21(din_leaf_21_bft),
    .din_leaf_22(din_leaf_22_bft),
    .din_leaf_23(din_leaf_23_bft),

   .resend_0(resend_0_bft),
   .resend_1(resend_1_bft),
   .resend_2(resend_2_bft),
   .resend_3(resend_3_bft),
   .resend_4(resend_4_bft),
   .resend_5(resend_5_bft),
   .resend_6(resend_6_bft),
   .resend_7(resend_7_bft),
   .resend_8(resend_8_bft),
   .resend_9(resend_9_bft),
   .resend_10(resend_10_bft),
   .resend_11(resend_11_bft),
   .resend_12(resend_12_bft),
   .resend_13(resend_13_bft),
   .resend_14(resend_14_bft),
   .resend_15(resend_15_bft),
   .resend_16(resend_16_bft),
   .resend_17(resend_17_bft),
   .resend_18(resend_18_bft),
   .resend_19(resend_19_bft),
   .resend_20(resend_20_bft),
   .resend_21(resend_21_bft),
   .resend_22(resend_22_bft),
   .resend_23(resend_23_bft),

    .reset(ap_rst_n_inv_bft),
    .reset_0(ap_rst_n_inv_p0),
    .reset_1(ap_rst_n_inv_p1),
    .reset_2(ap_rst_n_inv_p2),
    .reset_3(ap_rst_n_inv_p3),
    .reset_4(ap_rst_n_inv_p4),
    .reset_5(ap_rst_n_inv_p5),
    .reset_6(ap_rst_n_inv_p6),
    .reset_7(ap_rst_n_inv_p7),
    .reset_8(ap_rst_n_inv_p8),
    .reset_9(ap_rst_n_inv_p9),
    .reset_10(ap_rst_n_inv_p10),
    .reset_11(ap_rst_n_inv_p11),
    .reset_12(ap_rst_n_inv_p12),
    .reset_13(ap_rst_n_inv_p13),
    .reset_14(ap_rst_n_inv_p14),
    .reset_15(ap_rst_n_inv_p15),
    .reset_16(ap_rst_n_inv_p16),
    .reset_17(ap_rst_n_inv_p17),
    .reset_18(ap_rst_n_inv_p18),
    .reset_19(ap_rst_n_inv_p19),
    .reset_20(ap_rst_n_inv_p20),
    .reset_21(ap_rst_n_inv_p21),
    .reset_22(ap_rst_n_inv_p22),
    .reset_23(ap_rst_n_inv_p23)
    );



leaf20 page20_inst(
    .clk_200(clk_user),
    .clk_250(),
    .clk_300(),
    .clk_350(),
    .clk_400(ap_clk),
    .din_leaf_bft2interface(din_leaf_20),
    .dout_leaf_interface2bft(dout_leaf_20),
    .resend(resend_20),
    .reset_400(ap_rst_n_inv_p20),
    .ap_start(ap_start)
    );

leaf12 page12_inst(
    .clk_200(clk_user),
    .clk_250(),
    .clk_300(),
    .clk_350(),
    .clk_400(ap_clk),
    .din_leaf_bft2interface(din_leaf_12),
    .dout_leaf_interface2bft(dout_leaf_12),
    .resend(resend_12),
    .reset_400(ap_rst_n_inv_p12),
    .ap_start(ap_start)
    );

leaf22 page22_inst(
    .clk_200(clk_user),
    .clk_250(),
    .clk_300(),
    .clk_350(),
    .clk_400(ap_clk),
    .din_leaf_bft2interface(din_leaf_22),
    .dout_leaf_interface2bft(dout_leaf_22),
    .resend(resend_22),
    .reset_400(ap_rst_n_inv_p22),
    .ap_start(ap_start)
    );

leaf8 page8_inst(
    .clk_200(clk_user),
    .clk_250(),
    .clk_300(),
    .clk_350(),
    .clk_400(ap_clk),
    .din_leaf_bft2interface(din_leaf_8),
    .dout_leaf_interface2bft(dout_leaf_8),
    .resend(resend_8),
    .reset_400(ap_rst_n_inv_p8),
    .ap_start(ap_start)
    );

leaf16 page16_inst(
    .clk_200(clk_user),
    .clk_250(),
    .clk_300(),
    .clk_350(),
    .clk_400(ap_clk),
    .din_leaf_bft2interface(din_leaf_16),
    .dout_leaf_interface2bft(dout_leaf_16),
    .resend(resend_16),
    .reset_400(ap_rst_n_inv_p16),
    .ap_start(ap_start)
    );
endmodule


