// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module coloringFB_bot_m_coloringFB_bot_m_Pipeline_COLORING_FB_INIT_ROW (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        frame_buffer_V_0_address0,
        frame_buffer_V_0_ce0,
        frame_buffer_V_0_we0,
        frame_buffer_V_0_d0,
        frame_buffer_V_0_address1,
        frame_buffer_V_0_ce1,
        frame_buffer_V_0_we1,
        frame_buffer_V_0_d1,
        frame_buffer_V_1_address0,
        frame_buffer_V_1_ce0,
        frame_buffer_V_1_we0,
        frame_buffer_V_1_d0,
        frame_buffer_V_1_address1,
        frame_buffer_V_1_ce1,
        frame_buffer_V_1_we1,
        frame_buffer_V_1_d1,
        frame_buffer_V_2_address0,
        frame_buffer_V_2_ce0,
        frame_buffer_V_2_we0,
        frame_buffer_V_2_d0,
        frame_buffer_V_2_address1,
        frame_buffer_V_2_ce1,
        frame_buffer_V_2_we1,
        frame_buffer_V_2_d1,
        frame_buffer_V_3_address0,
        frame_buffer_V_3_ce0,
        frame_buffer_V_3_we0,
        frame_buffer_V_3_d0,
        frame_buffer_V_3_address1,
        frame_buffer_V_3_ce1,
        frame_buffer_V_3_we1,
        frame_buffer_V_3_d1,
        frame_buffer_V_4_address0,
        frame_buffer_V_4_ce0,
        frame_buffer_V_4_we0,
        frame_buffer_V_4_d0,
        frame_buffer_V_4_address1,
        frame_buffer_V_4_ce1,
        frame_buffer_V_4_we1,
        frame_buffer_V_4_d1,
        frame_buffer_V_5_address0,
        frame_buffer_V_5_ce0,
        frame_buffer_V_5_we0,
        frame_buffer_V_5_d0,
        frame_buffer_V_5_address1,
        frame_buffer_V_5_ce1,
        frame_buffer_V_5_we1,
        frame_buffer_V_5_d1,
        frame_buffer_V_6_address0,
        frame_buffer_V_6_ce0,
        frame_buffer_V_6_we0,
        frame_buffer_V_6_d0,
        frame_buffer_V_6_address1,
        frame_buffer_V_6_ce1,
        frame_buffer_V_6_we1,
        frame_buffer_V_6_d1,
        frame_buffer_V_7_address0,
        frame_buffer_V_7_ce0,
        frame_buffer_V_7_we0,
        frame_buffer_V_7_d0,
        frame_buffer_V_7_address1,
        frame_buffer_V_7_ce1,
        frame_buffer_V_7_we1,
        frame_buffer_V_7_d1
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] frame_buffer_V_0_address0;
output   frame_buffer_V_0_ce0;
output   frame_buffer_V_0_we0;
output  [7:0] frame_buffer_V_0_d0;
output  [11:0] frame_buffer_V_0_address1;
output   frame_buffer_V_0_ce1;
output   frame_buffer_V_0_we1;
output  [7:0] frame_buffer_V_0_d1;
output  [11:0] frame_buffer_V_1_address0;
output   frame_buffer_V_1_ce0;
output   frame_buffer_V_1_we0;
output  [7:0] frame_buffer_V_1_d0;
output  [11:0] frame_buffer_V_1_address1;
output   frame_buffer_V_1_ce1;
output   frame_buffer_V_1_we1;
output  [7:0] frame_buffer_V_1_d1;
output  [11:0] frame_buffer_V_2_address0;
output   frame_buffer_V_2_ce0;
output   frame_buffer_V_2_we0;
output  [7:0] frame_buffer_V_2_d0;
output  [11:0] frame_buffer_V_2_address1;
output   frame_buffer_V_2_ce1;
output   frame_buffer_V_2_we1;
output  [7:0] frame_buffer_V_2_d1;
output  [11:0] frame_buffer_V_3_address0;
output   frame_buffer_V_3_ce0;
output   frame_buffer_V_3_we0;
output  [7:0] frame_buffer_V_3_d0;
output  [11:0] frame_buffer_V_3_address1;
output   frame_buffer_V_3_ce1;
output   frame_buffer_V_3_we1;
output  [7:0] frame_buffer_V_3_d1;
output  [11:0] frame_buffer_V_4_address0;
output   frame_buffer_V_4_ce0;
output   frame_buffer_V_4_we0;
output  [7:0] frame_buffer_V_4_d0;
output  [11:0] frame_buffer_V_4_address1;
output   frame_buffer_V_4_ce1;
output   frame_buffer_V_4_we1;
output  [7:0] frame_buffer_V_4_d1;
output  [11:0] frame_buffer_V_5_address0;
output   frame_buffer_V_5_ce0;
output   frame_buffer_V_5_we0;
output  [7:0] frame_buffer_V_5_d0;
output  [11:0] frame_buffer_V_5_address1;
output   frame_buffer_V_5_ce1;
output   frame_buffer_V_5_we1;
output  [7:0] frame_buffer_V_5_d1;
output  [11:0] frame_buffer_V_6_address0;
output   frame_buffer_V_6_ce0;
output   frame_buffer_V_6_we0;
output  [7:0] frame_buffer_V_6_d0;
output  [11:0] frame_buffer_V_6_address1;
output   frame_buffer_V_6_ce1;
output   frame_buffer_V_6_we1;
output  [7:0] frame_buffer_V_6_d1;
output  [11:0] frame_buffer_V_7_address0;
output   frame_buffer_V_7_ce0;
output   frame_buffer_V_7_we0;
output  [7:0] frame_buffer_V_7_d0;
output  [11:0] frame_buffer_V_7_address1;
output   frame_buffer_V_7_ce1;
output   frame_buffer_V_7_we1;
output  [7:0] frame_buffer_V_7_d1;

reg ap_idle;
reg[11:0] frame_buffer_V_0_address0;
reg frame_buffer_V_0_ce0;
reg frame_buffer_V_0_we0;
reg[11:0] frame_buffer_V_0_address1;
reg frame_buffer_V_0_ce1;
reg frame_buffer_V_0_we1;
reg[11:0] frame_buffer_V_1_address0;
reg frame_buffer_V_1_ce0;
reg frame_buffer_V_1_we0;
reg[11:0] frame_buffer_V_1_address1;
reg frame_buffer_V_1_ce1;
reg frame_buffer_V_1_we1;
reg[11:0] frame_buffer_V_2_address0;
reg frame_buffer_V_2_ce0;
reg frame_buffer_V_2_we0;
reg[11:0] frame_buffer_V_2_address1;
reg frame_buffer_V_2_ce1;
reg frame_buffer_V_2_we1;
reg[11:0] frame_buffer_V_3_address0;
reg frame_buffer_V_3_ce0;
reg frame_buffer_V_3_we0;
reg[11:0] frame_buffer_V_3_address1;
reg frame_buffer_V_3_ce1;
reg frame_buffer_V_3_we1;
reg[11:0] frame_buffer_V_4_address0;
reg frame_buffer_V_4_ce0;
reg frame_buffer_V_4_we0;
reg[11:0] frame_buffer_V_4_address1;
reg frame_buffer_V_4_ce1;
reg frame_buffer_V_4_we1;
reg[11:0] frame_buffer_V_5_address0;
reg frame_buffer_V_5_ce0;
reg frame_buffer_V_5_we0;
reg[11:0] frame_buffer_V_5_address1;
reg frame_buffer_V_5_ce1;
reg frame_buffer_V_5_we1;
reg[11:0] frame_buffer_V_6_address0;
reg frame_buffer_V_6_ce0;
reg frame_buffer_V_6_we0;
reg[11:0] frame_buffer_V_6_address1;
reg frame_buffer_V_6_ce1;
reg frame_buffer_V_6_we1;
reg[11:0] frame_buffer_V_7_address0;
reg frame_buffer_V_7_ce0;
reg frame_buffer_V_7_we0;
reg[11:0] frame_buffer_V_7_address1;
reg frame_buffer_V_7_ce1;
reg frame_buffer_V_7_we1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln1057_fu_1204_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire   [12:0] tmp_1_fu_1216_p3;
reg   [12:0] tmp_1_reg_1567;
wire   [63:0] zext_ln31_fu_1224_p1;
wire   [63:0] tmp_2_fu_1242_p3;
wire   [63:0] tmp_4_fu_1268_p3;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_5_fu_1289_p3;
wire   [63:0] tmp_6_fu_1310_p3;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_7_fu_1331_p3;
wire   [63:0] tmp_8_fu_1352_p3;
wire    ap_CS_fsm_state4;
wire   [63:0] tmp_9_fu_1373_p3;
wire   [63:0] tmp_s_fu_1394_p3;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_3_fu_1415_p3;
wire   [63:0] tmp_10_fu_1436_p3;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_11_fu_1457_p3;
wire   [63:0] tmp_12_fu_1478_p3;
wire    ap_CS_fsm_state7;
wire   [63:0] tmp_13_fu_1499_p3;
wire   [63:0] tmp_14_fu_1520_p3;
wire   [63:0] tmp_15_fu_1541_p3;
reg   [8:0] i_V_fu_80;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_V_1;
wire   [8:0] i_V_2_fu_1210_p2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state7_pp0_stage6_iter0;
wire   [12:0] or_ln31_fu_1236_p2;
wire   [12:0] or_ln31_1_fu_1263_p2;
wire   [12:0] or_ln31_2_fu_1284_p2;
wire   [12:0] or_ln31_3_fu_1305_p2;
wire   [12:0] or_ln31_4_fu_1326_p2;
wire   [12:0] or_ln31_5_fu_1347_p2;
wire   [12:0] or_ln31_6_fu_1368_p2;
wire   [12:0] or_ln31_7_fu_1389_p2;
wire   [12:0] or_ln31_8_fu_1410_p2;
wire   [12:0] or_ln31_9_fu_1431_p2;
wire   [12:0] or_ln31_10_fu_1452_p2;
wire   [12:0] or_ln31_11_fu_1473_p2;
wire   [12:0] or_ln31_12_fu_1494_p2;
wire   [12:0] or_ln31_13_fu_1515_p2;
wire   [12:0] or_ln31_14_fu_1536_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_done_reg = 1'b0;
end

coloringFB_bot_m_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln1057_fu_1204_p2 == 1'd0)) begin
            i_V_fu_80 <= i_V_2_fu_1210_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_80 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_1_reg_1567[12 : 4] <= tmp_1_fu_1216_p3[12 : 4];
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_V_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_80;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_0_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_0_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_0_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_0_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_0_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_0_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_0_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_0_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_0_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_0_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_0_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_0_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_0_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_0_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_0_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_0_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_0_ce0 = 1'b1;
    end else begin
        frame_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_0_ce1 = 1'b1;
    end else begin
        frame_buffer_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_0_we0 = 1'b1;
    end else begin
        frame_buffer_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_0_we1 = 1'b1;
    end else begin
        frame_buffer_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_1_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_1_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_1_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_1_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_1_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_1_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_1_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_1_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_1_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_1_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_1_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_1_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_1_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_1_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_1_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_1_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_1_ce0 = 1'b1;
    end else begin
        frame_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_1_ce1 = 1'b1;
    end else begin
        frame_buffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_1_we0 = 1'b1;
    end else begin
        frame_buffer_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_1_we1 = 1'b1;
    end else begin
        frame_buffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_2_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_2_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_2_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_2_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_2_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_2_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_2_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_2_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_2_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_2_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_2_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_2_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_2_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_2_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_2_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_2_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_2_ce0 = 1'b1;
    end else begin
        frame_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_2_ce1 = 1'b1;
    end else begin
        frame_buffer_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_2_we0 = 1'b1;
    end else begin
        frame_buffer_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_2_we1 = 1'b1;
    end else begin
        frame_buffer_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_3_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_3_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_3_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_3_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_3_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_3_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_3_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_3_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_3_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_3_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_3_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_3_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_3_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_3_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_3_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_3_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_3_ce0 = 1'b1;
    end else begin
        frame_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_3_ce1 = 1'b1;
    end else begin
        frame_buffer_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_3_we0 = 1'b1;
    end else begin
        frame_buffer_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_3_we1 = 1'b1;
    end else begin
        frame_buffer_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_4_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_4_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_4_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_4_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_4_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_4_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_4_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_4_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_4_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_4_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_4_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_4_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_4_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_4_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_4_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_4_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_4_ce0 = 1'b1;
    end else begin
        frame_buffer_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_4_ce1 = 1'b1;
    end else begin
        frame_buffer_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_4_we0 = 1'b1;
    end else begin
        frame_buffer_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_4_we1 = 1'b1;
    end else begin
        frame_buffer_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_5_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_5_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_5_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_5_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_5_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_5_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_5_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_5_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_5_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_5_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_5_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_5_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_5_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_5_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_5_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_5_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_5_ce0 = 1'b1;
    end else begin
        frame_buffer_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_5_ce1 = 1'b1;
    end else begin
        frame_buffer_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_5_we0 = 1'b1;
    end else begin
        frame_buffer_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_5_we1 = 1'b1;
    end else begin
        frame_buffer_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_6_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_6_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_6_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_6_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_6_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_6_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_6_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_6_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_6_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_6_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_6_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_6_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_6_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_6_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_6_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_6_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_6_ce0 = 1'b1;
    end else begin
        frame_buffer_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_6_ce1 = 1'b1;
    end else begin
        frame_buffer_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_6_we0 = 1'b1;
    end else begin
        frame_buffer_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_6_we1 = 1'b1;
    end else begin
        frame_buffer_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_7_address0 = tmp_15_fu_1541_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_7_address0 = tmp_13_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_7_address0 = tmp_11_fu_1457_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_7_address0 = tmp_3_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_7_address0 = tmp_9_fu_1373_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_7_address0 = tmp_7_fu_1331_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_7_address0 = tmp_5_fu_1289_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_7_address0 = tmp_2_fu_1242_p3;
    end else begin
        frame_buffer_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        frame_buffer_V_7_address1 = tmp_14_fu_1520_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        frame_buffer_V_7_address1 = tmp_12_fu_1478_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        frame_buffer_V_7_address1 = tmp_10_fu_1436_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        frame_buffer_V_7_address1 = tmp_s_fu_1394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        frame_buffer_V_7_address1 = tmp_8_fu_1352_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        frame_buffer_V_7_address1 = tmp_6_fu_1310_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        frame_buffer_V_7_address1 = tmp_4_fu_1268_p3;
    end else if (((icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        frame_buffer_V_7_address1 = zext_ln31_fu_1224_p1;
    end else begin
        frame_buffer_V_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_7_ce0 = 1'b1;
    end else begin
        frame_buffer_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_7_ce1 = 1'b1;
    end else begin
        frame_buffer_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_7_we0 = 1'b1;
    end else begin
        frame_buffer_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        frame_buffer_V_7_we1 = 1'b1;
    end else begin
        frame_buffer_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (icmp_ln1057_fu_1204_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign frame_buffer_V_0_d0 = 8'd0;

assign frame_buffer_V_0_d1 = 8'd0;

assign frame_buffer_V_1_d0 = 8'd0;

assign frame_buffer_V_1_d1 = 8'd0;

assign frame_buffer_V_2_d0 = 8'd0;

assign frame_buffer_V_2_d1 = 8'd0;

assign frame_buffer_V_3_d0 = 8'd0;

assign frame_buffer_V_3_d1 = 8'd0;

assign frame_buffer_V_4_d0 = 8'd0;

assign frame_buffer_V_4_d1 = 8'd0;

assign frame_buffer_V_5_d0 = 8'd0;

assign frame_buffer_V_5_d1 = 8'd0;

assign frame_buffer_V_6_d0 = 8'd0;

assign frame_buffer_V_6_d1 = 8'd0;

assign frame_buffer_V_7_d0 = 8'd0;

assign frame_buffer_V_7_d1 = 8'd0;

assign i_V_2_fu_1210_p2 = (ap_sig_allocacmp_i_V_1 + 9'd1);

assign icmp_ln1057_fu_1204_p2 = ((ap_sig_allocacmp_i_V_1 == 9'd256) ? 1'b1 : 1'b0);

assign or_ln31_10_fu_1452_p2 = (tmp_1_reg_1567 | 13'd11);

assign or_ln31_11_fu_1473_p2 = (tmp_1_reg_1567 | 13'd12);

assign or_ln31_12_fu_1494_p2 = (tmp_1_reg_1567 | 13'd13);

assign or_ln31_13_fu_1515_p2 = (tmp_1_reg_1567 | 13'd14);

assign or_ln31_14_fu_1536_p2 = (tmp_1_reg_1567 | 13'd15);

assign or_ln31_1_fu_1263_p2 = (tmp_1_reg_1567 | 13'd2);

assign or_ln31_2_fu_1284_p2 = (tmp_1_reg_1567 | 13'd3);

assign or_ln31_3_fu_1305_p2 = (tmp_1_reg_1567 | 13'd4);

assign or_ln31_4_fu_1326_p2 = (tmp_1_reg_1567 | 13'd5);

assign or_ln31_5_fu_1347_p2 = (tmp_1_reg_1567 | 13'd6);

assign or_ln31_6_fu_1368_p2 = (tmp_1_reg_1567 | 13'd7);

assign or_ln31_7_fu_1389_p2 = (tmp_1_reg_1567 | 13'd8);

assign or_ln31_8_fu_1410_p2 = (tmp_1_reg_1567 | 13'd9);

assign or_ln31_9_fu_1431_p2 = (tmp_1_reg_1567 | 13'd10);

assign or_ln31_fu_1236_p2 = (tmp_1_fu_1216_p3 | 13'd1);

assign tmp_10_fu_1436_p3 = {{51'd0}, {or_ln31_9_fu_1431_p2}};

assign tmp_11_fu_1457_p3 = {{51'd0}, {or_ln31_10_fu_1452_p2}};

assign tmp_12_fu_1478_p3 = {{51'd0}, {or_ln31_11_fu_1473_p2}};

assign tmp_13_fu_1499_p3 = {{51'd0}, {or_ln31_12_fu_1494_p2}};

assign tmp_14_fu_1520_p3 = {{51'd0}, {or_ln31_13_fu_1515_p2}};

assign tmp_15_fu_1541_p3 = {{51'd0}, {or_ln31_14_fu_1536_p2}};

assign tmp_1_fu_1216_p3 = {{ap_sig_allocacmp_i_V_1}, {4'd0}};

assign tmp_2_fu_1242_p3 = {{51'd0}, {or_ln31_fu_1236_p2}};

assign tmp_3_fu_1415_p3 = {{51'd0}, {or_ln31_8_fu_1410_p2}};

assign tmp_4_fu_1268_p3 = {{51'd0}, {or_ln31_1_fu_1263_p2}};

assign tmp_5_fu_1289_p3 = {{51'd0}, {or_ln31_2_fu_1284_p2}};

assign tmp_6_fu_1310_p3 = {{51'd0}, {or_ln31_3_fu_1305_p2}};

assign tmp_7_fu_1331_p3 = {{51'd0}, {or_ln31_4_fu_1326_p2}};

assign tmp_8_fu_1352_p3 = {{51'd0}, {or_ln31_5_fu_1347_p2}};

assign tmp_9_fu_1373_p3 = {{51'd0}, {or_ln31_6_fu_1368_p2}};

assign tmp_s_fu_1394_p3 = {{51'd0}, {or_ln31_7_fu_1389_p2}};

assign zext_ln31_fu_1224_p1 = tmp_1_fu_1216_p3;

always @ (posedge ap_clk) begin
    tmp_1_reg_1567[3:0] <= 4'b0000;
end

endmodule //coloringFB_bot_m_coloringFB_bot_m_Pipeline_COLORING_FB_INIT_ROW
