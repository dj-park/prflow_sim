// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dotProduct_i5_dotProduct_i5_Pipeline_GRAD (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        grad_V_7_address0,
        grad_V_7_ce0,
        grad_V_7_we0,
        grad_V_7_d0,
        grad_V_6_address0,
        grad_V_6_ce0,
        grad_V_6_we0,
        grad_V_6_d0,
        grad_V_5_address0,
        grad_V_5_ce0,
        grad_V_5_we0,
        grad_V_5_d0,
        grad_V_4_address0,
        grad_V_4_ce0,
        grad_V_4_we0,
        grad_V_4_d0,
        grad_V_3_address0,
        grad_V_3_ce0,
        grad_V_3_we0,
        grad_V_3_d0,
        grad_V_2_address0,
        grad_V_2_ce0,
        grad_V_2_we0,
        grad_V_2_d0,
        grad_V_1_address0,
        grad_V_1_ce0,
        grad_V_1_we0,
        grad_V_1_d0,
        grad_V_address0,
        grad_V_ce0,
        grad_V_we0,
        grad_V_d0,
        sext_ln66,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_q0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_address0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_ce0,
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] grad_V_7_address0;
output   grad_V_7_ce0;
output   grad_V_7_we0;
output  [31:0] grad_V_7_d0;
output  [4:0] grad_V_6_address0;
output   grad_V_6_ce0;
output   grad_V_6_we0;
output  [31:0] grad_V_6_d0;
output  [4:0] grad_V_5_address0;
output   grad_V_5_ce0;
output   grad_V_5_we0;
output  [31:0] grad_V_5_d0;
output  [4:0] grad_V_4_address0;
output   grad_V_4_ce0;
output   grad_V_4_we0;
output  [31:0] grad_V_4_d0;
output  [4:0] grad_V_3_address0;
output   grad_V_3_ce0;
output   grad_V_3_we0;
output  [31:0] grad_V_3_d0;
output  [4:0] grad_V_2_address0;
output   grad_V_2_ce0;
output   grad_V_2_we0;
output  [31:0] grad_V_2_d0;
output  [4:0] grad_V_1_address0;
output   grad_V_1_ce0;
output   grad_V_1_we0;
output  [31:0] grad_V_1_d0;
output  [4:0] grad_V_address0;
output   grad_V_ce0;
output   grad_V_we0;
output  [31:0] grad_V_d0;
input  [31:0] sext_ln66;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_q0;
output  [4:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_address0;
output   dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_ce0;
input  [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_q0;

reg ap_idle;
reg grad_V_7_ce0;
reg grad_V_7_we0;
reg grad_V_6_ce0;
reg grad_V_6_we0;
reg grad_V_5_ce0;
reg grad_V_5_we0;
reg grad_V_4_ce0;
reg grad_V_4_we0;
reg grad_V_3_ce0;
reg grad_V_3_we0;
reg grad_V_2_ce0;
reg grad_V_2_we0;
reg grad_V_1_ce0;
reg grad_V_1_we0;
reg grad_V_ce0;
reg grad_V_we0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_ce0;
reg dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln66_fu_300_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire  signed [50:0] sext_ln66_cast_fu_288_p1;
reg  signed [50:0] sext_ln66_cast_reg_544;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln66_fu_312_p1;
reg   [63:0] zext_ln66_reg_560;
reg   [63:0] zext_ln66_reg_560_pp0_iter1_reg;
reg   [63:0] zext_ln66_reg_560_pp0_iter2_reg;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_load_reg_612;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_load_reg_617;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_load_reg_622;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_load_reg_627;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_load_reg_632;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_load_reg_637;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_load_reg_642;
reg   [15:0] dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_load_reg_647;
reg   [31:0] trunc_ln_reg_652;
reg   [31:0] trunc_ln864_1_reg_657;
reg   [31:0] trunc_ln864_2_reg_662;
reg   [31:0] trunc_ln864_3_reg_667;
reg   [31:0] trunc_ln864_4_reg_672;
reg   [31:0] trunc_ln864_5_reg_677;
reg   [31:0] trunc_ln864_6_reg_682;
reg   [31:0] trunc_ln864_7_reg_687;
wire    ap_block_pp0_stage0;
reg   [5:0] i_fu_70;
wire   [5:0] add_ln66_fu_306_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_3;
wire  signed [22:0] shl_ln884_1_fu_329_p3;
wire  signed [31:0] r_V_fu_340_p1;
wire   [50:0] r_V_fu_340_p2;
wire  signed [22:0] shl_ln884_2_fu_355_p3;
wire  signed [31:0] r_V_9_fu_366_p1;
wire   [50:0] r_V_9_fu_366_p2;
wire  signed [22:0] shl_ln884_3_fu_381_p3;
wire  signed [31:0] r_V_10_fu_392_p1;
wire   [50:0] r_V_10_fu_392_p2;
wire  signed [22:0] shl_ln884_4_fu_407_p3;
wire  signed [31:0] r_V_11_fu_418_p1;
wire   [50:0] r_V_11_fu_418_p2;
wire  signed [22:0] shl_ln884_5_fu_433_p3;
wire  signed [31:0] r_V_12_fu_444_p1;
wire   [50:0] r_V_12_fu_444_p2;
wire  signed [22:0] shl_ln884_6_fu_459_p3;
wire  signed [31:0] r_V_13_fu_470_p1;
wire   [50:0] r_V_13_fu_470_p2;
wire  signed [22:0] shl_ln884_7_fu_485_p3;
wire  signed [31:0] r_V_14_fu_496_p1;
wire   [50:0] r_V_14_fu_496_p2;
wire  signed [22:0] shl_ln884_8_fu_511_p3;
wire  signed [31:0] r_V_15_fu_522_p1;
wire   [50:0] r_V_15_fu_522_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U36(
    .din0(shl_ln884_1_fu_329_p3),
    .din1(r_V_fu_340_p1),
    .dout(r_V_fu_340_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U37(
    .din0(shl_ln884_2_fu_355_p3),
    .din1(r_V_9_fu_366_p1),
    .dout(r_V_9_fu_366_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U38(
    .din0(shl_ln884_3_fu_381_p3),
    .din1(r_V_10_fu_392_p1),
    .dout(r_V_10_fu_392_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U39(
    .din0(shl_ln884_4_fu_407_p3),
    .din1(r_V_11_fu_418_p1),
    .dout(r_V_11_fu_418_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U40(
    .din0(shl_ln884_5_fu_433_p3),
    .din1(r_V_12_fu_444_p1),
    .dout(r_V_12_fu_444_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U41(
    .din0(shl_ln884_6_fu_459_p3),
    .din1(r_V_13_fu_470_p1),
    .dout(r_V_13_fu_470_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U42(
    .din0(shl_ln884_7_fu_485_p3),
    .din1(r_V_14_fu_496_p1),
    .dout(r_V_14_fu_496_p2)
);

dotProduct_i5_mul_23s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_23s_32s_51_1_1_U43(
    .din0(shl_ln884_8_fu_511_p3),
    .din1(r_V_15_fu_522_p1),
    .dout(r_V_15_fu_522_p2)
);

dotProduct_i5_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln66_fu_300_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_70 <= add_ln66_fu_306_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_70 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_load_reg_617 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_load_reg_647 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_load_reg_642 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_load_reg_637 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_load_reg_632 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_load_reg_627 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_load_reg_612 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_q0;
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_load_reg_622 <= dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_q0;
        sext_ln66_cast_reg_544 <= sext_ln66_cast_fu_288_p1;
        zext_ln66_reg_560_pp0_iter1_reg[5 : 0] <= zext_ln66_reg_560[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        trunc_ln864_1_reg_657 <= {{r_V_9_fu_366_p2[50:19]}};
        trunc_ln864_2_reg_662 <= {{r_V_10_fu_392_p2[50:19]}};
        trunc_ln864_3_reg_667 <= {{r_V_11_fu_418_p2[50:19]}};
        trunc_ln864_4_reg_672 <= {{r_V_12_fu_444_p2[50:19]}};
        trunc_ln864_5_reg_677 <= {{r_V_13_fu_470_p2[50:19]}};
        trunc_ln864_6_reg_682 <= {{r_V_14_fu_496_p2[50:19]}};
        trunc_ln864_7_reg_687 <= {{r_V_15_fu_522_p2[50:19]}};
        trunc_ln_reg_652 <= {{r_V_fu_340_p2[50:19]}};
        zext_ln66_reg_560_pp0_iter2_reg[5 : 0] <= zext_ln66_reg_560_pp0_iter1_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_300_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln66_reg_560[5 : 0] <= zext_ln66_fu_312_p1[5 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln66_fu_300_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_ce0 = 1'b1;
    end else begin
        dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_1_ce0 = 1'b1;
    end else begin
        grad_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_1_we0 = 1'b1;
    end else begin
        grad_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_2_ce0 = 1'b1;
    end else begin
        grad_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_2_we0 = 1'b1;
    end else begin
        grad_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_3_ce0 = 1'b1;
    end else begin
        grad_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_3_we0 = 1'b1;
    end else begin
        grad_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_4_ce0 = 1'b1;
    end else begin
        grad_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_4_we0 = 1'b1;
    end else begin
        grad_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_5_ce0 = 1'b1;
    end else begin
        grad_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_5_we0 = 1'b1;
    end else begin
        grad_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_6_ce0 = 1'b1;
    end else begin
        grad_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_6_we0 = 1'b1;
    end else begin
        grad_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_7_ce0 = 1'b1;
    end else begin
        grad_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_7_we0 = 1'b1;
    end else begin
        grad_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_ce0 = 1'b1;
    end else begin
        grad_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grad_V_we0 = 1'b1;
    end else begin
        grad_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln66_fu_306_p2 = (ap_sig_allocacmp_i_3 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_address0 = zext_ln66_fu_312_p1;

assign dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_address0 = zext_ln66_fu_312_p1;

assign grad_V_1_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_1_d0 = trunc_ln864_1_reg_657;

assign grad_V_2_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_2_d0 = trunc_ln864_2_reg_662;

assign grad_V_3_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_3_d0 = trunc_ln864_3_reg_667;

assign grad_V_4_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_4_d0 = trunc_ln864_4_reg_672;

assign grad_V_5_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_5_d0 = trunc_ln864_5_reg_677;

assign grad_V_6_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_6_d0 = trunc_ln864_6_reg_682;

assign grad_V_7_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_7_d0 = trunc_ln864_7_reg_687;

assign grad_V_address0 = zext_ln66_reg_560_pp0_iter2_reg;

assign grad_V_d0 = trunc_ln_reg_652;

assign icmp_ln66_fu_300_p2 = ((ap_sig_allocacmp_i_3 == 6'd32) ? 1'b1 : 1'b0);

assign r_V_10_fu_392_p1 = sext_ln66_cast_reg_544;

assign r_V_11_fu_418_p1 = sext_ln66_cast_reg_544;

assign r_V_12_fu_444_p1 = sext_ln66_cast_reg_544;

assign r_V_13_fu_470_p1 = sext_ln66_cast_reg_544;

assign r_V_14_fu_496_p1 = sext_ln66_cast_reg_544;

assign r_V_15_fu_522_p1 = sext_ln66_cast_reg_544;

assign r_V_9_fu_366_p1 = sext_ln66_cast_reg_544;

assign r_V_fu_340_p1 = sext_ln66_cast_reg_544;

assign sext_ln66_cast_fu_288_p1 = $signed(sext_ln66);

assign shl_ln884_1_fu_329_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_7_load_reg_612}, {7'd0}};

assign shl_ln884_2_fu_355_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_1_load_reg_617}, {7'd0}};

assign shl_ln884_3_fu_381_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_load_reg_622}, {7'd0}};

assign shl_ln884_4_fu_407_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_6_load_reg_627}, {7'd0}};

assign shl_ln884_5_fu_433_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_5_load_reg_632}, {7'd0}};

assign shl_ln884_6_fu_459_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_4_load_reg_637}, {7'd0}};

assign shl_ln884_7_fu_485_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_3_load_reg_642}, {7'd0}};

assign shl_ln884_8_fu_511_p3 = {{dotProduct_i5_stream_stream_stream_stream_ap_uint_64_0_feature_2_load_reg_647}, {7'd0}};

assign zext_ln66_fu_312_p1 = ap_sig_allocacmp_i_3;

always @ (posedge ap_clk) begin
    zext_ln66_reg_560[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln66_reg_560_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln66_reg_560_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //dotProduct_i5_dotProduct_i5_Pipeline_GRAD
