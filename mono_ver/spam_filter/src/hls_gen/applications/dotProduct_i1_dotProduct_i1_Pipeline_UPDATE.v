// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dotProduct_i1_dotProduct_i1_Pipeline_UPDATE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        grad_V_address0,
        grad_V_ce0,
        grad_V_q0,
        grad_V_1_address0,
        grad_V_1_ce0,
        grad_V_1_q0,
        grad_V_2_address0,
        grad_V_2_ce0,
        grad_V_2_q0,
        grad_V_3_address0,
        grad_V_3_ce0,
        grad_V_3_q0,
        grad_V_4_address0,
        grad_V_4_ce0,
        grad_V_4_q0,
        grad_V_5_address0,
        grad_V_5_ce0,
        grad_V_5_q0,
        grad_V_6_address0,
        grad_V_6_ce0,
        grad_V_6_q0,
        grad_V_7_address0,
        grad_V_7_ce0,
        grad_V_7_q0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_q1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_address0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_we0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_d0,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_address1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce1,
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] grad_V_address0;
output   grad_V_ce0;
input  [31:0] grad_V_q0;
output  [4:0] grad_V_1_address0;
output   grad_V_1_ce0;
input  [31:0] grad_V_1_q0;
output  [4:0] grad_V_2_address0;
output   grad_V_2_ce0;
input  [31:0] grad_V_2_q0;
output  [4:0] grad_V_3_address0;
output   grad_V_3_ce0;
input  [31:0] grad_V_3_q0;
output  [4:0] grad_V_4_address0;
output   grad_V_4_ce0;
input  [31:0] grad_V_4_q0;
output  [4:0] grad_V_5_address0;
output   grad_V_5_ce0;
input  [31:0] grad_V_5_q0;
output  [4:0] grad_V_6_address0;
output   grad_V_6_ce0;
input  [31:0] grad_V_6_q0;
output  [4:0] grad_V_7_address0;
output   grad_V_7_ce0;
input  [31:0] grad_V_7_q0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_q1;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_address0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce0;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_we0;
output  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_d0;
output  [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_address1;
output   dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce1;
input  [31:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_q1;

reg ap_idle;
reg grad_V_ce0;
reg grad_V_1_ce0;
reg grad_V_2_ce0;
reg grad_V_3_ce0;
reg grad_V_4_ce0;
reg grad_V_5_ce0;
reg grad_V_6_ce0;
reg grad_V_7_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce1;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_we0;
reg dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln74_fu_308_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter2_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter1_reg;
reg   [4:0] dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter2_reg;
reg  signed [31:0] grad_V_load_reg_644;
reg  signed [31:0] grad_V_1_load_reg_649;
reg  signed [31:0] grad_V_2_load_reg_654;
reg  signed [31:0] grad_V_3_load_reg_659;
reg  signed [31:0] grad_V_4_load_reg_664;
reg  signed [31:0] grad_V_5_load_reg_669;
reg  signed [31:0] grad_V_6_load_reg_674;
reg  signed [31:0] grad_V_7_load_reg_679;
reg   [31:0] tmp_V_reg_684;
reg   [31:0] tmp_V_1_reg_689;
reg   [31:0] tmp_V_2_reg_694;
reg   [31:0] tmp_V_3_reg_699;
reg   [31:0] tmp_V_4_reg_704;
reg   [31:0] tmp_V_5_reg_709;
reg   [31:0] tmp_V_6_reg_714;
reg   [31:0] tmp_V_7_reg_719;
wire   [63:0] zext_ln74_fu_320_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] i_fu_64;
wire   [5:0] add_ln74_fu_314_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_1;
wire  signed [31:0] r_V_fu_348_p1;
wire   [50:0] r_V_fu_348_p2;
wire  signed [31:0] r_V_1_fu_367_p1;
wire   [50:0] r_V_1_fu_367_p2;
wire  signed [31:0] r_V_2_fu_386_p1;
wire   [50:0] r_V_2_fu_386_p2;
wire  signed [31:0] r_V_3_fu_405_p1;
wire   [50:0] r_V_3_fu_405_p2;
wire  signed [31:0] r_V_4_fu_424_p1;
wire   [50:0] r_V_4_fu_424_p2;
wire  signed [31:0] r_V_5_fu_443_p1;
wire   [50:0] r_V_5_fu_443_p2;
wire  signed [31:0] r_V_6_fu_462_p1;
wire   [50:0] r_V_6_fu_462_p2;
wire  signed [31:0] r_V_7_fu_481_p1;
wire   [50:0] r_V_7_fu_481_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U62(
    .din0(grad_V_load_reg_644),
    .din1(r_V_fu_348_p1),
    .dout(r_V_fu_348_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U63(
    .din0(grad_V_1_load_reg_649),
    .din1(r_V_1_fu_367_p1),
    .dout(r_V_1_fu_367_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U64(
    .din0(grad_V_2_load_reg_654),
    .din1(r_V_2_fu_386_p1),
    .dout(r_V_2_fu_386_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U65(
    .din0(grad_V_3_load_reg_659),
    .din1(r_V_3_fu_405_p1),
    .dout(r_V_3_fu_405_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U66(
    .din0(grad_V_4_load_reg_664),
    .din1(r_V_4_fu_424_p1),
    .dout(r_V_4_fu_424_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U67(
    .din0(grad_V_5_load_reg_669),
    .din1(r_V_5_fu_443_p1),
    .dout(r_V_5_fu_443_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U68(
    .din0(grad_V_6_load_reg_674),
    .din1(r_V_6_fu_462_p1),
    .dout(r_V_6_fu_462_p2)
);

dotProduct_i1_mul_32s_32s_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 51 ))
mul_32s_32s_51_1_1_U69(
    .din0(grad_V_7_load_reg_679),
    .din1(r_V_7_fu_481_p1),
    .dout(r_V_7_fu_481_p2)
);

dotProduct_i1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln74_fu_308_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_64 <= add_ln74_fu_314_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_64 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter1_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638;
        grad_V_1_load_reg_649 <= grad_V_1_q0;
        grad_V_2_load_reg_654 <= grad_V_2_q0;
        grad_V_3_load_reg_659 <= grad_V_3_q0;
        grad_V_4_load_reg_664 <= grad_V_4_q0;
        grad_V_5_load_reg_669 <= grad_V_5_q0;
        grad_V_6_load_reg_674 <= grad_V_6_q0;
        grad_V_7_load_reg_679 <= grad_V_7_q0;
        grad_V_load_reg_644 <= grad_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_308_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561 <= zext_ln74_fu_320_p1;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638 <= zext_ln74_fu_320_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter1_reg;
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter2_reg <= dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter1_reg;
        tmp_V_1_reg_689 <= {{r_V_1_fu_367_p2[50:19]}};
        tmp_V_2_reg_694 <= {{r_V_2_fu_386_p2[50:19]}};
        tmp_V_3_reg_699 <= {{r_V_3_fu_405_p2[50:19]}};
        tmp_V_4_reg_704 <= {{r_V_4_fu_424_p2[50:19]}};
        tmp_V_5_reg_709 <= {{r_V_5_fu_443_p2[50:19]}};
        tmp_V_6_reg_714 <= {{r_V_6_fu_462_p2[50:19]}};
        tmp_V_7_reg_719 <= {{r_V_7_fu_481_p2[50:19]}};
        tmp_V_reg_684 <= {{r_V_fu_348_p2[50:19]}};
    end
end

always @ (*) begin
    if (((icmp_ln74_fu_308_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce1 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_we0 = 1'b1;
    end else begin
        dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_1_ce0 = 1'b1;
    end else begin
        grad_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_2_ce0 = 1'b1;
    end else begin
        grad_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_3_ce0 = 1'b1;
    end else begin
        grad_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_4_ce0 = 1'b1;
    end else begin
        grad_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_5_ce0 = 1'b1;
    end else begin
        grad_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_6_ce0 = 1'b1;
    end else begin
        grad_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_7_ce0 = 1'b1;
    end else begin
        grad_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grad_V_ce0 = 1'b1;
    end else begin
        grad_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln74_fu_314_p2 = (ap_sig_allocacmp_i_1 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_addr_reg_627_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_1_q1 + tmp_V_6_reg_714);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_addr_reg_616_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_2_q1 + tmp_V_5_reg_709);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_addr_reg_605_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_3_q1 + tmp_V_4_reg_704);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_addr_reg_594_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_4_q1 + tmp_V_3_reg_699);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_addr_reg_583_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_5_q1 + tmp_V_2_reg_694);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_addr_reg_572_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_6_q1 + tmp_V_1_reg_689);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_addr_reg_561_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_7_q1 + tmp_V_reg_684);

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_address0 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter2_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_address1 = dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_addr_reg_638_pp0_iter1_reg;

assign dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_d0 = (dotProduct_i1_stream_stream_stream_stream_ap_uint_64_0_param_q1 + tmp_V_7_reg_719);

assign grad_V_1_address0 = zext_ln74_fu_320_p1;

assign grad_V_2_address0 = zext_ln74_fu_320_p1;

assign grad_V_3_address0 = zext_ln74_fu_320_p1;

assign grad_V_4_address0 = zext_ln74_fu_320_p1;

assign grad_V_5_address0 = zext_ln74_fu_320_p1;

assign grad_V_6_address0 = zext_ln74_fu_320_p1;

assign grad_V_7_address0 = zext_ln74_fu_320_p1;

assign grad_V_address0 = zext_ln74_fu_320_p1;

assign icmp_ln74_fu_308_p2 = ((ap_sig_allocacmp_i_1 == 6'd32) ? 1'b1 : 1'b0);

assign r_V_1_fu_367_p1 = 51'd2251798421176320;

assign r_V_2_fu_386_p1 = 51'd2251798421176320;

assign r_V_3_fu_405_p1 = 51'd2251798421176320;

assign r_V_4_fu_424_p1 = 51'd2251798421176320;

assign r_V_5_fu_443_p1 = 51'd2251798421176320;

assign r_V_6_fu_462_p1 = 51'd2251798421176320;

assign r_V_7_fu_481_p1 = 51'd2251798421176320;

assign r_V_fu_348_p1 = 51'd2251798421176320;

assign zext_ln74_fu_320_p1 = ap_sig_allocacmp_i_1;

endmodule //dotProduct_i1_dotProduct_i1_Pipeline_UPDATE
