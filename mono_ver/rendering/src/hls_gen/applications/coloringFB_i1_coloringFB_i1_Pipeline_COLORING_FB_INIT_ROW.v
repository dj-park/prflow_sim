// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module coloringFB_i1_coloringFB_i1_Pipeline_COLORING_FB_INIT_ROW (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_d0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_d1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_d0,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we1,
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_d1
);

parameter    ap_ST_fsm_state1 = 64'd1;
parameter    ap_ST_fsm_state2 = 64'd2;
parameter    ap_ST_fsm_state3 = 64'd4;
parameter    ap_ST_fsm_state4 = 64'd8;
parameter    ap_ST_fsm_state5 = 64'd16;
parameter    ap_ST_fsm_state6 = 64'd32;
parameter    ap_ST_fsm_state7 = 64'd64;
parameter    ap_ST_fsm_state8 = 64'd128;
parameter    ap_ST_fsm_state9 = 64'd256;
parameter    ap_ST_fsm_state10 = 64'd512;
parameter    ap_ST_fsm_state11 = 64'd1024;
parameter    ap_ST_fsm_state12 = 64'd2048;
parameter    ap_ST_fsm_state13 = 64'd4096;
parameter    ap_ST_fsm_state14 = 64'd8192;
parameter    ap_ST_fsm_state15 = 64'd16384;
parameter    ap_ST_fsm_state16 = 64'd32768;
parameter    ap_ST_fsm_state17 = 64'd65536;
parameter    ap_ST_fsm_state18 = 64'd131072;
parameter    ap_ST_fsm_state19 = 64'd262144;
parameter    ap_ST_fsm_state20 = 64'd524288;
parameter    ap_ST_fsm_state21 = 64'd1048576;
parameter    ap_ST_fsm_state22 = 64'd2097152;
parameter    ap_ST_fsm_state23 = 64'd4194304;
parameter    ap_ST_fsm_state24 = 64'd8388608;
parameter    ap_ST_fsm_state25 = 64'd16777216;
parameter    ap_ST_fsm_state26 = 64'd33554432;
parameter    ap_ST_fsm_state27 = 64'd67108864;
parameter    ap_ST_fsm_state28 = 64'd134217728;
parameter    ap_ST_fsm_state29 = 64'd268435456;
parameter    ap_ST_fsm_state30 = 64'd536870912;
parameter    ap_ST_fsm_state31 = 64'd1073741824;
parameter    ap_ST_fsm_state32 = 64'd2147483648;
parameter    ap_ST_fsm_state33 = 64'd4294967296;
parameter    ap_ST_fsm_state34 = 64'd8589934592;
parameter    ap_ST_fsm_state35 = 64'd17179869184;
parameter    ap_ST_fsm_state36 = 64'd34359738368;
parameter    ap_ST_fsm_state37 = 64'd68719476736;
parameter    ap_ST_fsm_state38 = 64'd137438953472;
parameter    ap_ST_fsm_state39 = 64'd274877906944;
parameter    ap_ST_fsm_state40 = 64'd549755813888;
parameter    ap_ST_fsm_state41 = 64'd1099511627776;
parameter    ap_ST_fsm_state42 = 64'd2199023255552;
parameter    ap_ST_fsm_state43 = 64'd4398046511104;
parameter    ap_ST_fsm_state44 = 64'd8796093022208;
parameter    ap_ST_fsm_state45 = 64'd17592186044416;
parameter    ap_ST_fsm_state46 = 64'd35184372088832;
parameter    ap_ST_fsm_state47 = 64'd70368744177664;
parameter    ap_ST_fsm_state48 = 64'd140737488355328;
parameter    ap_ST_fsm_state49 = 64'd281474976710656;
parameter    ap_ST_fsm_state50 = 64'd562949953421312;
parameter    ap_ST_fsm_state51 = 64'd1125899906842624;
parameter    ap_ST_fsm_state52 = 64'd2251799813685248;
parameter    ap_ST_fsm_state53 = 64'd4503599627370496;
parameter    ap_ST_fsm_state54 = 64'd9007199254740992;
parameter    ap_ST_fsm_state55 = 64'd18014398509481984;
parameter    ap_ST_fsm_state56 = 64'd36028797018963968;
parameter    ap_ST_fsm_state57 = 64'd72057594037927936;
parameter    ap_ST_fsm_state58 = 64'd144115188075855872;
parameter    ap_ST_fsm_state59 = 64'd288230376151711744;
parameter    ap_ST_fsm_state60 = 64'd576460752303423488;
parameter    ap_ST_fsm_state61 = 64'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 64'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 64'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 64'd9223372036854775808;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce0;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we0;
output  [7:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_d0;
output  [14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce1;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we1;
output  [7:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_d1;
output  [14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce0;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we0;
output  [7:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_d0;
output  [14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce1;
output   coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we1;
output  [7:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_d1;

reg ap_idle;
reg[14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce0;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we0;
reg[14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce1;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we1;
reg[14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce0;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we0;
reg[14:0] coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce1;
reg coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we1;

(* fsm_encoding = "none" *) reg   [63:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln1073_fu_2374_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state64;
wire    ap_block_state64_pp0_stage63_iter0;
wire   [14:0] tmp_1_fu_2386_p3;
reg   [14:0] tmp_1_reg_3813;
wire   [63:0] zext_ln28_fu_2394_p1;
wire   [63:0] zext_ln28_1_fu_2406_p1;
wire   [63:0] zext_ln28_2_fu_2422_p1;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln28_3_fu_2433_p1;
wire   [63:0] zext_ln28_4_fu_2444_p1;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln28_5_fu_2455_p1;
wire   [63:0] zext_ln28_6_fu_2466_p1;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln28_7_fu_2477_p1;
wire   [63:0] zext_ln28_8_fu_2488_p1;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln28_9_fu_2499_p1;
wire   [63:0] zext_ln28_10_fu_2510_p1;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln28_11_fu_2521_p1;
wire   [63:0] zext_ln28_12_fu_2532_p1;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln28_13_fu_2543_p1;
wire   [63:0] zext_ln28_14_fu_2554_p1;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln28_15_fu_2565_p1;
wire   [63:0] zext_ln28_16_fu_2576_p1;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln28_17_fu_2587_p1;
wire   [63:0] zext_ln28_18_fu_2598_p1;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln28_19_fu_2609_p1;
wire   [63:0] zext_ln28_20_fu_2620_p1;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln28_21_fu_2631_p1;
wire   [63:0] zext_ln28_22_fu_2642_p1;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln28_23_fu_2653_p1;
wire   [63:0] zext_ln28_24_fu_2664_p1;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln28_25_fu_2675_p1;
wire   [63:0] zext_ln28_26_fu_2686_p1;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln28_27_fu_2697_p1;
wire   [63:0] zext_ln28_28_fu_2708_p1;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln28_29_fu_2719_p1;
wire   [63:0] zext_ln28_30_fu_2730_p1;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln28_31_fu_2741_p1;
wire   [63:0] zext_ln28_32_fu_2752_p1;
wire    ap_CS_fsm_state17;
wire   [63:0] zext_ln28_33_fu_2763_p1;
wire   [63:0] zext_ln28_34_fu_2774_p1;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln28_35_fu_2785_p1;
wire   [63:0] zext_ln28_36_fu_2796_p1;
wire    ap_CS_fsm_state19;
wire   [63:0] zext_ln28_37_fu_2807_p1;
wire   [63:0] zext_ln28_38_fu_2818_p1;
wire    ap_CS_fsm_state20;
wire   [63:0] zext_ln28_39_fu_2829_p1;
wire   [63:0] zext_ln28_40_fu_2840_p1;
wire    ap_CS_fsm_state21;
wire   [63:0] zext_ln28_41_fu_2851_p1;
wire   [63:0] zext_ln28_42_fu_2862_p1;
wire    ap_CS_fsm_state22;
wire   [63:0] zext_ln28_43_fu_2873_p1;
wire   [63:0] zext_ln28_44_fu_2884_p1;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln28_45_fu_2895_p1;
wire   [63:0] zext_ln28_46_fu_2906_p1;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln28_47_fu_2917_p1;
wire   [63:0] zext_ln28_48_fu_2928_p1;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln28_49_fu_2939_p1;
wire   [63:0] zext_ln28_50_fu_2950_p1;
wire    ap_CS_fsm_state26;
wire   [63:0] zext_ln28_51_fu_2961_p1;
wire   [63:0] zext_ln28_52_fu_2972_p1;
wire    ap_CS_fsm_state27;
wire   [63:0] zext_ln28_53_fu_2983_p1;
wire   [63:0] zext_ln28_54_fu_2994_p1;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln28_55_fu_3005_p1;
wire   [63:0] zext_ln28_56_fu_3016_p1;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln28_57_fu_3027_p1;
wire   [63:0] zext_ln28_58_fu_3038_p1;
wire    ap_CS_fsm_state30;
wire   [63:0] zext_ln28_59_fu_3049_p1;
wire   [63:0] zext_ln28_60_fu_3060_p1;
wire    ap_CS_fsm_state31;
wire   [63:0] zext_ln28_61_fu_3071_p1;
wire   [63:0] zext_ln28_62_fu_3082_p1;
wire    ap_CS_fsm_state32;
wire   [63:0] zext_ln28_63_fu_3093_p1;
wire   [63:0] zext_ln28_64_fu_3104_p1;
wire    ap_CS_fsm_state33;
wire   [63:0] zext_ln28_65_fu_3115_p1;
wire   [63:0] zext_ln28_66_fu_3126_p1;
wire    ap_CS_fsm_state34;
wire   [63:0] zext_ln28_67_fu_3137_p1;
wire   [63:0] zext_ln28_68_fu_3148_p1;
wire    ap_CS_fsm_state35;
wire   [63:0] zext_ln28_69_fu_3159_p1;
wire   [63:0] zext_ln28_70_fu_3170_p1;
wire    ap_CS_fsm_state36;
wire   [63:0] zext_ln28_71_fu_3181_p1;
wire   [63:0] zext_ln28_72_fu_3192_p1;
wire    ap_CS_fsm_state37;
wire   [63:0] zext_ln28_73_fu_3203_p1;
wire   [63:0] zext_ln28_74_fu_3214_p1;
wire    ap_CS_fsm_state38;
wire   [63:0] zext_ln28_75_fu_3225_p1;
wire   [63:0] zext_ln28_76_fu_3236_p1;
wire    ap_CS_fsm_state39;
wire   [63:0] zext_ln28_77_fu_3247_p1;
wire   [63:0] zext_ln28_78_fu_3258_p1;
wire    ap_CS_fsm_state40;
wire   [63:0] zext_ln28_79_fu_3269_p1;
wire   [63:0] zext_ln28_80_fu_3280_p1;
wire    ap_CS_fsm_state41;
wire   [63:0] zext_ln28_81_fu_3291_p1;
wire   [63:0] zext_ln28_82_fu_3302_p1;
wire    ap_CS_fsm_state42;
wire   [63:0] zext_ln28_83_fu_3313_p1;
wire   [63:0] zext_ln28_84_fu_3324_p1;
wire    ap_CS_fsm_state43;
wire   [63:0] zext_ln28_85_fu_3335_p1;
wire   [63:0] zext_ln28_86_fu_3346_p1;
wire    ap_CS_fsm_state44;
wire   [63:0] zext_ln28_87_fu_3357_p1;
wire   [63:0] zext_ln28_88_fu_3368_p1;
wire    ap_CS_fsm_state45;
wire   [63:0] zext_ln28_89_fu_3379_p1;
wire   [63:0] zext_ln28_90_fu_3390_p1;
wire    ap_CS_fsm_state46;
wire   [63:0] zext_ln28_91_fu_3401_p1;
wire   [63:0] zext_ln28_92_fu_3412_p1;
wire    ap_CS_fsm_state47;
wire   [63:0] zext_ln28_93_fu_3423_p1;
wire   [63:0] zext_ln28_94_fu_3434_p1;
wire    ap_CS_fsm_state48;
wire   [63:0] zext_ln28_95_fu_3445_p1;
wire   [63:0] zext_ln28_96_fu_3456_p1;
wire    ap_CS_fsm_state49;
wire   [63:0] zext_ln28_97_fu_3467_p1;
wire   [63:0] zext_ln28_98_fu_3478_p1;
wire    ap_CS_fsm_state50;
wire   [63:0] zext_ln28_99_fu_3489_p1;
wire   [63:0] zext_ln28_100_fu_3500_p1;
wire    ap_CS_fsm_state51;
wire   [63:0] zext_ln28_101_fu_3511_p1;
wire   [63:0] zext_ln28_102_fu_3522_p1;
wire    ap_CS_fsm_state52;
wire   [63:0] zext_ln28_103_fu_3533_p1;
wire   [63:0] zext_ln28_104_fu_3544_p1;
wire    ap_CS_fsm_state53;
wire   [63:0] zext_ln28_105_fu_3555_p1;
wire   [63:0] zext_ln28_106_fu_3566_p1;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln28_107_fu_3577_p1;
wire   [63:0] zext_ln28_108_fu_3588_p1;
wire    ap_CS_fsm_state55;
wire   [63:0] zext_ln28_109_fu_3599_p1;
wire   [63:0] zext_ln28_110_fu_3610_p1;
wire    ap_CS_fsm_state56;
wire   [63:0] zext_ln28_111_fu_3621_p1;
wire   [63:0] zext_ln28_112_fu_3632_p1;
wire    ap_CS_fsm_state57;
wire   [63:0] zext_ln28_113_fu_3643_p1;
wire   [63:0] zext_ln28_114_fu_3654_p1;
wire    ap_CS_fsm_state58;
wire   [63:0] zext_ln28_115_fu_3665_p1;
wire   [63:0] zext_ln28_116_fu_3676_p1;
wire    ap_CS_fsm_state59;
wire   [63:0] zext_ln28_117_fu_3687_p1;
wire   [63:0] zext_ln28_118_fu_3698_p1;
wire    ap_CS_fsm_state60;
wire   [63:0] zext_ln28_119_fu_3709_p1;
wire   [63:0] zext_ln28_120_fu_3720_p1;
wire    ap_CS_fsm_state61;
wire   [63:0] zext_ln28_121_fu_3731_p1;
wire   [63:0] zext_ln28_122_fu_3742_p1;
wire    ap_CS_fsm_state62;
wire   [63:0] zext_ln28_123_fu_3753_p1;
wire   [63:0] zext_ln28_124_fu_3764_p1;
wire    ap_CS_fsm_state63;
wire   [63:0] zext_ln28_125_fu_3775_p1;
wire   [63:0] zext_ln28_126_fu_3786_p1;
wire   [63:0] zext_ln28_127_fu_3797_p1;
reg   [8:0] i_V_fu_288;
wire   [8:0] i_V_2_fu_2380_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i_V_1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_state44_pp0_stage43_iter0;
wire    ap_block_state45_pp0_stage44_iter0;
wire    ap_block_state46_pp0_stage45_iter0;
wire    ap_block_state47_pp0_stage46_iter0;
wire    ap_block_state48_pp0_stage47_iter0;
wire    ap_block_state49_pp0_stage48_iter0;
wire    ap_block_state50_pp0_stage49_iter0;
wire    ap_block_state51_pp0_stage50_iter0;
wire    ap_block_state52_pp0_stage51_iter0;
wire    ap_block_state53_pp0_stage52_iter0;
wire    ap_block_state54_pp0_stage53_iter0;
wire    ap_block_state55_pp0_stage54_iter0;
wire    ap_block_state56_pp0_stage55_iter0;
wire    ap_block_state57_pp0_stage56_iter0;
wire    ap_block_state58_pp0_stage57_iter0;
wire    ap_block_state59_pp0_stage58_iter0;
wire    ap_block_state60_pp0_stage59_iter0;
wire    ap_block_state61_pp0_stage60_iter0;
wire    ap_block_state62_pp0_stage61_iter0;
wire    ap_block_state63_pp0_stage62_iter0;
wire   [7:0] trunc_ln1073_fu_2370_p1;
wire   [14:0] or_ln28_fu_2400_p2;
wire   [14:0] or_ln28_1_fu_2417_p2;
wire   [14:0] or_ln28_2_fu_2428_p2;
wire   [14:0] or_ln28_3_fu_2439_p2;
wire   [14:0] or_ln28_4_fu_2450_p2;
wire   [14:0] or_ln28_5_fu_2461_p2;
wire   [14:0] or_ln28_6_fu_2472_p2;
wire   [14:0] or_ln28_7_fu_2483_p2;
wire   [14:0] or_ln28_8_fu_2494_p2;
wire   [14:0] or_ln28_9_fu_2505_p2;
wire   [14:0] or_ln28_10_fu_2516_p2;
wire   [14:0] or_ln28_11_fu_2527_p2;
wire   [14:0] or_ln28_12_fu_2538_p2;
wire   [14:0] or_ln28_13_fu_2549_p2;
wire   [14:0] or_ln28_14_fu_2560_p2;
wire   [14:0] or_ln28_15_fu_2571_p2;
wire   [14:0] or_ln28_16_fu_2582_p2;
wire   [14:0] or_ln28_17_fu_2593_p2;
wire   [14:0] or_ln28_18_fu_2604_p2;
wire   [14:0] or_ln28_19_fu_2615_p2;
wire   [14:0] or_ln28_20_fu_2626_p2;
wire   [14:0] or_ln28_21_fu_2637_p2;
wire   [14:0] or_ln28_22_fu_2648_p2;
wire   [14:0] or_ln28_23_fu_2659_p2;
wire   [14:0] or_ln28_24_fu_2670_p2;
wire   [14:0] or_ln28_25_fu_2681_p2;
wire   [14:0] or_ln28_26_fu_2692_p2;
wire   [14:0] or_ln28_27_fu_2703_p2;
wire   [14:0] or_ln28_28_fu_2714_p2;
wire   [14:0] or_ln28_29_fu_2725_p2;
wire   [14:0] or_ln28_30_fu_2736_p2;
wire   [14:0] or_ln28_31_fu_2747_p2;
wire   [14:0] or_ln28_32_fu_2758_p2;
wire   [14:0] or_ln28_33_fu_2769_p2;
wire   [14:0] or_ln28_34_fu_2780_p2;
wire   [14:0] or_ln28_35_fu_2791_p2;
wire   [14:0] or_ln28_36_fu_2802_p2;
wire   [14:0] or_ln28_37_fu_2813_p2;
wire   [14:0] or_ln28_38_fu_2824_p2;
wire   [14:0] or_ln28_39_fu_2835_p2;
wire   [14:0] or_ln28_40_fu_2846_p2;
wire   [14:0] or_ln28_41_fu_2857_p2;
wire   [14:0] or_ln28_42_fu_2868_p2;
wire   [14:0] or_ln28_43_fu_2879_p2;
wire   [14:0] or_ln28_44_fu_2890_p2;
wire   [14:0] or_ln28_45_fu_2901_p2;
wire   [14:0] or_ln28_46_fu_2912_p2;
wire   [14:0] or_ln28_47_fu_2923_p2;
wire   [14:0] or_ln28_48_fu_2934_p2;
wire   [14:0] or_ln28_49_fu_2945_p2;
wire   [14:0] or_ln28_50_fu_2956_p2;
wire   [14:0] or_ln28_51_fu_2967_p2;
wire   [14:0] or_ln28_52_fu_2978_p2;
wire   [14:0] or_ln28_53_fu_2989_p2;
wire   [14:0] or_ln28_54_fu_3000_p2;
wire   [14:0] or_ln28_55_fu_3011_p2;
wire   [14:0] or_ln28_56_fu_3022_p2;
wire   [14:0] or_ln28_57_fu_3033_p2;
wire   [14:0] or_ln28_58_fu_3044_p2;
wire   [14:0] or_ln28_59_fu_3055_p2;
wire   [14:0] or_ln28_60_fu_3066_p2;
wire   [14:0] or_ln28_61_fu_3077_p2;
wire   [14:0] or_ln28_62_fu_3088_p2;
wire   [14:0] or_ln28_63_fu_3099_p2;
wire   [14:0] or_ln28_64_fu_3110_p2;
wire   [14:0] or_ln28_65_fu_3121_p2;
wire   [14:0] or_ln28_66_fu_3132_p2;
wire   [14:0] or_ln28_67_fu_3143_p2;
wire   [14:0] or_ln28_68_fu_3154_p2;
wire   [14:0] or_ln28_69_fu_3165_p2;
wire   [14:0] or_ln28_70_fu_3176_p2;
wire   [14:0] or_ln28_71_fu_3187_p2;
wire   [14:0] or_ln28_72_fu_3198_p2;
wire   [14:0] or_ln28_73_fu_3209_p2;
wire   [14:0] or_ln28_74_fu_3220_p2;
wire   [14:0] or_ln28_75_fu_3231_p2;
wire   [14:0] or_ln28_76_fu_3242_p2;
wire   [14:0] or_ln28_77_fu_3253_p2;
wire   [14:0] or_ln28_78_fu_3264_p2;
wire   [14:0] or_ln28_79_fu_3275_p2;
wire   [14:0] or_ln28_80_fu_3286_p2;
wire   [14:0] or_ln28_81_fu_3297_p2;
wire   [14:0] or_ln28_82_fu_3308_p2;
wire   [14:0] or_ln28_83_fu_3319_p2;
wire   [14:0] or_ln28_84_fu_3330_p2;
wire   [14:0] or_ln28_85_fu_3341_p2;
wire   [14:0] or_ln28_86_fu_3352_p2;
wire   [14:0] or_ln28_87_fu_3363_p2;
wire   [14:0] or_ln28_88_fu_3374_p2;
wire   [14:0] or_ln28_89_fu_3385_p2;
wire   [14:0] or_ln28_90_fu_3396_p2;
wire   [14:0] or_ln28_91_fu_3407_p2;
wire   [14:0] or_ln28_92_fu_3418_p2;
wire   [14:0] or_ln28_93_fu_3429_p2;
wire   [14:0] or_ln28_94_fu_3440_p2;
wire   [14:0] or_ln28_95_fu_3451_p2;
wire   [14:0] or_ln28_96_fu_3462_p2;
wire   [14:0] or_ln28_97_fu_3473_p2;
wire   [14:0] or_ln28_98_fu_3484_p2;
wire   [14:0] or_ln28_99_fu_3495_p2;
wire   [14:0] or_ln28_100_fu_3506_p2;
wire   [14:0] or_ln28_101_fu_3517_p2;
wire   [14:0] or_ln28_102_fu_3528_p2;
wire   [14:0] or_ln28_103_fu_3539_p2;
wire   [14:0] or_ln28_104_fu_3550_p2;
wire   [14:0] or_ln28_105_fu_3561_p2;
wire   [14:0] or_ln28_106_fu_3572_p2;
wire   [14:0] or_ln28_107_fu_3583_p2;
wire   [14:0] or_ln28_108_fu_3594_p2;
wire   [14:0] or_ln28_109_fu_3605_p2;
wire   [14:0] or_ln28_110_fu_3616_p2;
wire   [14:0] or_ln28_111_fu_3627_p2;
wire   [14:0] or_ln28_112_fu_3638_p2;
wire   [14:0] or_ln28_113_fu_3649_p2;
wire   [14:0] or_ln28_114_fu_3660_p2;
wire   [14:0] or_ln28_115_fu_3671_p2;
wire   [14:0] or_ln28_116_fu_3682_p2;
wire   [14:0] or_ln28_117_fu_3693_p2;
wire   [14:0] or_ln28_118_fu_3704_p2;
wire   [14:0] or_ln28_119_fu_3715_p2;
wire   [14:0] or_ln28_120_fu_3726_p2;
wire   [14:0] or_ln28_121_fu_3737_p2;
wire   [14:0] or_ln28_122_fu_3748_p2;
wire   [14:0] or_ln28_123_fu_3759_p2;
wire   [14:0] or_ln28_124_fu_3770_p2;
wire   [14:0] or_ln28_125_fu_3781_p2;
wire   [14:0] or_ln28_126_fu_3792_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [63:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 64'd1;
#0 ap_done_reg = 1'b0;
end

coloringFB_i1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln1073_fu_2374_p2 == 1'd0)) begin
            i_V_fu_288 <= i_V_2_fu_2380_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_288 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_1_reg_3813[14 : 7] <= tmp_1_fu_2386_p3[14 : 7];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln1073_fu_2374_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_V_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_i_V_1 = i_V_fu_288;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_127_fu_3797_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_125_fu_3775_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_123_fu_3753_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_121_fu_3731_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_119_fu_3709_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_117_fu_3687_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_115_fu_3665_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_113_fu_3643_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_111_fu_3621_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_109_fu_3599_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_107_fu_3577_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_105_fu_3555_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_103_fu_3533_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_101_fu_3511_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_99_fu_3489_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_97_fu_3467_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_95_fu_3445_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_93_fu_3423_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_91_fu_3401_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_89_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_87_fu_3357_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_85_fu_3335_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_83_fu_3313_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_81_fu_3291_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_79_fu_3269_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_77_fu_3247_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_75_fu_3225_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_73_fu_3203_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_71_fu_3181_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_69_fu_3159_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_67_fu_3137_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_65_fu_3115_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_63_fu_3093_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_61_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_59_fu_3049_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_57_fu_3027_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_55_fu_3005_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_53_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_51_fu_2961_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_49_fu_2939_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_47_fu_2917_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_45_fu_2895_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_43_fu_2873_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_41_fu_2851_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_39_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_37_fu_2807_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_35_fu_2785_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_33_fu_2763_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_31_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_29_fu_2719_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_27_fu_2697_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_25_fu_2675_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_23_fu_2653_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_21_fu_2631_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_19_fu_2609_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_17_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_15_fu_2565_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_13_fu_2543_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_11_fu_2521_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_9_fu_2499_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_7_fu_2477_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_5_fu_2455_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_3_fu_2433_p1;
    end else if (((icmp_ln1073_fu_2374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = zext_ln28_1_fu_2406_p1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_126_fu_3786_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_124_fu_3764_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_122_fu_3742_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_120_fu_3720_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_118_fu_3698_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_116_fu_3676_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_114_fu_3654_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_112_fu_3632_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_110_fu_3610_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_108_fu_3588_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_106_fu_3566_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_104_fu_3544_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_102_fu_3522_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_100_fu_3500_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_98_fu_3478_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_96_fu_3456_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_94_fu_3434_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_92_fu_3412_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_90_fu_3390_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_88_fu_3368_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_86_fu_3346_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_84_fu_3324_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_82_fu_3302_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_80_fu_3280_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_78_fu_3258_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_76_fu_3236_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_74_fu_3214_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_72_fu_3192_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_70_fu_3170_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_68_fu_3148_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_66_fu_3126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_64_fu_3104_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_62_fu_3082_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_60_fu_3060_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_58_fu_3038_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_56_fu_3016_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_54_fu_2994_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_52_fu_2972_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_50_fu_2950_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_48_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_46_fu_2906_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_44_fu_2884_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_42_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_40_fu_2840_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_38_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_36_fu_2796_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_34_fu_2774_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_32_fu_2752_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_30_fu_2730_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_28_fu_2708_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_26_fu_2686_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_24_fu_2664_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_22_fu_2642_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_20_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_18_fu_2598_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_16_fu_2576_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_14_fu_2554_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_12_fu_2532_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_10_fu_2510_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_8_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_6_fu_2466_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_4_fu_2444_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_2_fu_2422_p1;
    end else if (((icmp_ln1073_fu_2374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = zext_ln28_fu_2394_p1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce0 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce1 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we0 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we1 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_127_fu_3797_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_125_fu_3775_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_123_fu_3753_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_121_fu_3731_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_119_fu_3709_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_117_fu_3687_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_115_fu_3665_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_113_fu_3643_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_111_fu_3621_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_109_fu_3599_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_107_fu_3577_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_105_fu_3555_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_103_fu_3533_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_101_fu_3511_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_99_fu_3489_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_97_fu_3467_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_95_fu_3445_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_93_fu_3423_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_91_fu_3401_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_89_fu_3379_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_87_fu_3357_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_85_fu_3335_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_83_fu_3313_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_81_fu_3291_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_79_fu_3269_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_77_fu_3247_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_75_fu_3225_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_73_fu_3203_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_71_fu_3181_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_69_fu_3159_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_67_fu_3137_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_65_fu_3115_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_63_fu_3093_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_61_fu_3071_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_59_fu_3049_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_57_fu_3027_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_55_fu_3005_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_53_fu_2983_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_51_fu_2961_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_49_fu_2939_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_47_fu_2917_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_45_fu_2895_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_43_fu_2873_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_41_fu_2851_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_39_fu_2829_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_37_fu_2807_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_35_fu_2785_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_33_fu_2763_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_31_fu_2741_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_29_fu_2719_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_27_fu_2697_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_25_fu_2675_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_23_fu_2653_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_21_fu_2631_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_19_fu_2609_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_17_fu_2587_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_15_fu_2565_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_13_fu_2543_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_11_fu_2521_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_9_fu_2499_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_7_fu_2477_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_5_fu_2455_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_3_fu_2433_p1;
    end else if (((icmp_ln1073_fu_2374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = zext_ln28_1_fu_2406_p1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_126_fu_3786_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_124_fu_3764_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_122_fu_3742_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_120_fu_3720_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_118_fu_3698_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_116_fu_3676_p1;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_114_fu_3654_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_112_fu_3632_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_110_fu_3610_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_108_fu_3588_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_106_fu_3566_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_104_fu_3544_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_102_fu_3522_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_100_fu_3500_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_98_fu_3478_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_96_fu_3456_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_94_fu_3434_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_92_fu_3412_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_90_fu_3390_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_88_fu_3368_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_86_fu_3346_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_84_fu_3324_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_82_fu_3302_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_80_fu_3280_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_78_fu_3258_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_76_fu_3236_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_74_fu_3214_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_72_fu_3192_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_70_fu_3170_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_68_fu_3148_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_66_fu_3126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_64_fu_3104_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_62_fu_3082_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_60_fu_3060_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_58_fu_3038_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_56_fu_3016_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_54_fu_2994_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_52_fu_2972_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_50_fu_2950_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_48_fu_2928_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_46_fu_2906_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_44_fu_2884_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_42_fu_2862_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_40_fu_2840_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_38_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_36_fu_2796_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_34_fu_2774_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_32_fu_2752_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_30_fu_2730_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_28_fu_2708_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_26_fu_2686_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_24_fu_2664_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_22_fu_2642_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_20_fu_2620_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_18_fu_2598_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_16_fu_2576_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_14_fu_2554_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_12_fu_2532_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_10_fu_2510_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_8_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_6_fu_2466_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_4_fu_2444_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_2_fu_2422_p1;
    end else if (((icmp_ln1073_fu_2374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = zext_ln28_fu_2394_p1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce0 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce1 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we0 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln1073_fu_2374_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we1 = 1'b1;
    end else begin
        coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln1073_fu_2374_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_d0 = 8'd0;

assign coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_1_d1 = 8'd0;

assign coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_d0 = 8'd0;

assign coloringFB_i1_stream_ap_uint_32_0_stream_ap_uint_32_0_frame_buffer_d1 = 8'd0;

assign i_V_2_fu_2380_p2 = (ap_sig_allocacmp_i_V_1 + 9'd1);

assign icmp_ln1073_fu_2374_p2 = ((ap_sig_allocacmp_i_V_1 == 9'd256) ? 1'b1 : 1'b0);

assign or_ln28_100_fu_3506_p2 = (tmp_1_reg_3813 | 15'd101);

assign or_ln28_101_fu_3517_p2 = (tmp_1_reg_3813 | 15'd102);

assign or_ln28_102_fu_3528_p2 = (tmp_1_reg_3813 | 15'd103);

assign or_ln28_103_fu_3539_p2 = (tmp_1_reg_3813 | 15'd104);

assign or_ln28_104_fu_3550_p2 = (tmp_1_reg_3813 | 15'd105);

assign or_ln28_105_fu_3561_p2 = (tmp_1_reg_3813 | 15'd106);

assign or_ln28_106_fu_3572_p2 = (tmp_1_reg_3813 | 15'd107);

assign or_ln28_107_fu_3583_p2 = (tmp_1_reg_3813 | 15'd108);

assign or_ln28_108_fu_3594_p2 = (tmp_1_reg_3813 | 15'd109);

assign or_ln28_109_fu_3605_p2 = (tmp_1_reg_3813 | 15'd110);

assign or_ln28_10_fu_2516_p2 = (tmp_1_reg_3813 | 15'd11);

assign or_ln28_110_fu_3616_p2 = (tmp_1_reg_3813 | 15'd111);

assign or_ln28_111_fu_3627_p2 = (tmp_1_reg_3813 | 15'd112);

assign or_ln28_112_fu_3638_p2 = (tmp_1_reg_3813 | 15'd113);

assign or_ln28_113_fu_3649_p2 = (tmp_1_reg_3813 | 15'd114);

assign or_ln28_114_fu_3660_p2 = (tmp_1_reg_3813 | 15'd115);

assign or_ln28_115_fu_3671_p2 = (tmp_1_reg_3813 | 15'd116);

assign or_ln28_116_fu_3682_p2 = (tmp_1_reg_3813 | 15'd117);

assign or_ln28_117_fu_3693_p2 = (tmp_1_reg_3813 | 15'd118);

assign or_ln28_118_fu_3704_p2 = (tmp_1_reg_3813 | 15'd119);

assign or_ln28_119_fu_3715_p2 = (tmp_1_reg_3813 | 15'd120);

assign or_ln28_11_fu_2527_p2 = (tmp_1_reg_3813 | 15'd12);

assign or_ln28_120_fu_3726_p2 = (tmp_1_reg_3813 | 15'd121);

assign or_ln28_121_fu_3737_p2 = (tmp_1_reg_3813 | 15'd122);

assign or_ln28_122_fu_3748_p2 = (tmp_1_reg_3813 | 15'd123);

assign or_ln28_123_fu_3759_p2 = (tmp_1_reg_3813 | 15'd124);

assign or_ln28_124_fu_3770_p2 = (tmp_1_reg_3813 | 15'd125);

assign or_ln28_125_fu_3781_p2 = (tmp_1_reg_3813 | 15'd126);

assign or_ln28_126_fu_3792_p2 = (tmp_1_reg_3813 | 15'd127);

assign or_ln28_12_fu_2538_p2 = (tmp_1_reg_3813 | 15'd13);

assign or_ln28_13_fu_2549_p2 = (tmp_1_reg_3813 | 15'd14);

assign or_ln28_14_fu_2560_p2 = (tmp_1_reg_3813 | 15'd15);

assign or_ln28_15_fu_2571_p2 = (tmp_1_reg_3813 | 15'd16);

assign or_ln28_16_fu_2582_p2 = (tmp_1_reg_3813 | 15'd17);

assign or_ln28_17_fu_2593_p2 = (tmp_1_reg_3813 | 15'd18);

assign or_ln28_18_fu_2604_p2 = (tmp_1_reg_3813 | 15'd19);

assign or_ln28_19_fu_2615_p2 = (tmp_1_reg_3813 | 15'd20);

assign or_ln28_1_fu_2417_p2 = (tmp_1_reg_3813 | 15'd2);

assign or_ln28_20_fu_2626_p2 = (tmp_1_reg_3813 | 15'd21);

assign or_ln28_21_fu_2637_p2 = (tmp_1_reg_3813 | 15'd22);

assign or_ln28_22_fu_2648_p2 = (tmp_1_reg_3813 | 15'd23);

assign or_ln28_23_fu_2659_p2 = (tmp_1_reg_3813 | 15'd24);

assign or_ln28_24_fu_2670_p2 = (tmp_1_reg_3813 | 15'd25);

assign or_ln28_25_fu_2681_p2 = (tmp_1_reg_3813 | 15'd26);

assign or_ln28_26_fu_2692_p2 = (tmp_1_reg_3813 | 15'd27);

assign or_ln28_27_fu_2703_p2 = (tmp_1_reg_3813 | 15'd28);

assign or_ln28_28_fu_2714_p2 = (tmp_1_reg_3813 | 15'd29);

assign or_ln28_29_fu_2725_p2 = (tmp_1_reg_3813 | 15'd30);

assign or_ln28_2_fu_2428_p2 = (tmp_1_reg_3813 | 15'd3);

assign or_ln28_30_fu_2736_p2 = (tmp_1_reg_3813 | 15'd31);

assign or_ln28_31_fu_2747_p2 = (tmp_1_reg_3813 | 15'd32);

assign or_ln28_32_fu_2758_p2 = (tmp_1_reg_3813 | 15'd33);

assign or_ln28_33_fu_2769_p2 = (tmp_1_reg_3813 | 15'd34);

assign or_ln28_34_fu_2780_p2 = (tmp_1_reg_3813 | 15'd35);

assign or_ln28_35_fu_2791_p2 = (tmp_1_reg_3813 | 15'd36);

assign or_ln28_36_fu_2802_p2 = (tmp_1_reg_3813 | 15'd37);

assign or_ln28_37_fu_2813_p2 = (tmp_1_reg_3813 | 15'd38);

assign or_ln28_38_fu_2824_p2 = (tmp_1_reg_3813 | 15'd39);

assign or_ln28_39_fu_2835_p2 = (tmp_1_reg_3813 | 15'd40);

assign or_ln28_3_fu_2439_p2 = (tmp_1_reg_3813 | 15'd4);

assign or_ln28_40_fu_2846_p2 = (tmp_1_reg_3813 | 15'd41);

assign or_ln28_41_fu_2857_p2 = (tmp_1_reg_3813 | 15'd42);

assign or_ln28_42_fu_2868_p2 = (tmp_1_reg_3813 | 15'd43);

assign or_ln28_43_fu_2879_p2 = (tmp_1_reg_3813 | 15'd44);

assign or_ln28_44_fu_2890_p2 = (tmp_1_reg_3813 | 15'd45);

assign or_ln28_45_fu_2901_p2 = (tmp_1_reg_3813 | 15'd46);

assign or_ln28_46_fu_2912_p2 = (tmp_1_reg_3813 | 15'd47);

assign or_ln28_47_fu_2923_p2 = (tmp_1_reg_3813 | 15'd48);

assign or_ln28_48_fu_2934_p2 = (tmp_1_reg_3813 | 15'd49);

assign or_ln28_49_fu_2945_p2 = (tmp_1_reg_3813 | 15'd50);

assign or_ln28_4_fu_2450_p2 = (tmp_1_reg_3813 | 15'd5);

assign or_ln28_50_fu_2956_p2 = (tmp_1_reg_3813 | 15'd51);

assign or_ln28_51_fu_2967_p2 = (tmp_1_reg_3813 | 15'd52);

assign or_ln28_52_fu_2978_p2 = (tmp_1_reg_3813 | 15'd53);

assign or_ln28_53_fu_2989_p2 = (tmp_1_reg_3813 | 15'd54);

assign or_ln28_54_fu_3000_p2 = (tmp_1_reg_3813 | 15'd55);

assign or_ln28_55_fu_3011_p2 = (tmp_1_reg_3813 | 15'd56);

assign or_ln28_56_fu_3022_p2 = (tmp_1_reg_3813 | 15'd57);

assign or_ln28_57_fu_3033_p2 = (tmp_1_reg_3813 | 15'd58);

assign or_ln28_58_fu_3044_p2 = (tmp_1_reg_3813 | 15'd59);

assign or_ln28_59_fu_3055_p2 = (tmp_1_reg_3813 | 15'd60);

assign or_ln28_5_fu_2461_p2 = (tmp_1_reg_3813 | 15'd6);

assign or_ln28_60_fu_3066_p2 = (tmp_1_reg_3813 | 15'd61);

assign or_ln28_61_fu_3077_p2 = (tmp_1_reg_3813 | 15'd62);

assign or_ln28_62_fu_3088_p2 = (tmp_1_reg_3813 | 15'd63);

assign or_ln28_63_fu_3099_p2 = (tmp_1_reg_3813 | 15'd64);

assign or_ln28_64_fu_3110_p2 = (tmp_1_reg_3813 | 15'd65);

assign or_ln28_65_fu_3121_p2 = (tmp_1_reg_3813 | 15'd66);

assign or_ln28_66_fu_3132_p2 = (tmp_1_reg_3813 | 15'd67);

assign or_ln28_67_fu_3143_p2 = (tmp_1_reg_3813 | 15'd68);

assign or_ln28_68_fu_3154_p2 = (tmp_1_reg_3813 | 15'd69);

assign or_ln28_69_fu_3165_p2 = (tmp_1_reg_3813 | 15'd70);

assign or_ln28_6_fu_2472_p2 = (tmp_1_reg_3813 | 15'd7);

assign or_ln28_70_fu_3176_p2 = (tmp_1_reg_3813 | 15'd71);

assign or_ln28_71_fu_3187_p2 = (tmp_1_reg_3813 | 15'd72);

assign or_ln28_72_fu_3198_p2 = (tmp_1_reg_3813 | 15'd73);

assign or_ln28_73_fu_3209_p2 = (tmp_1_reg_3813 | 15'd74);

assign or_ln28_74_fu_3220_p2 = (tmp_1_reg_3813 | 15'd75);

assign or_ln28_75_fu_3231_p2 = (tmp_1_reg_3813 | 15'd76);

assign or_ln28_76_fu_3242_p2 = (tmp_1_reg_3813 | 15'd77);

assign or_ln28_77_fu_3253_p2 = (tmp_1_reg_3813 | 15'd78);

assign or_ln28_78_fu_3264_p2 = (tmp_1_reg_3813 | 15'd79);

assign or_ln28_79_fu_3275_p2 = (tmp_1_reg_3813 | 15'd80);

assign or_ln28_7_fu_2483_p2 = (tmp_1_reg_3813 | 15'd8);

assign or_ln28_80_fu_3286_p2 = (tmp_1_reg_3813 | 15'd81);

assign or_ln28_81_fu_3297_p2 = (tmp_1_reg_3813 | 15'd82);

assign or_ln28_82_fu_3308_p2 = (tmp_1_reg_3813 | 15'd83);

assign or_ln28_83_fu_3319_p2 = (tmp_1_reg_3813 | 15'd84);

assign or_ln28_84_fu_3330_p2 = (tmp_1_reg_3813 | 15'd85);

assign or_ln28_85_fu_3341_p2 = (tmp_1_reg_3813 | 15'd86);

assign or_ln28_86_fu_3352_p2 = (tmp_1_reg_3813 | 15'd87);

assign or_ln28_87_fu_3363_p2 = (tmp_1_reg_3813 | 15'd88);

assign or_ln28_88_fu_3374_p2 = (tmp_1_reg_3813 | 15'd89);

assign or_ln28_89_fu_3385_p2 = (tmp_1_reg_3813 | 15'd90);

assign or_ln28_8_fu_2494_p2 = (tmp_1_reg_3813 | 15'd9);

assign or_ln28_90_fu_3396_p2 = (tmp_1_reg_3813 | 15'd91);

assign or_ln28_91_fu_3407_p2 = (tmp_1_reg_3813 | 15'd92);

assign or_ln28_92_fu_3418_p2 = (tmp_1_reg_3813 | 15'd93);

assign or_ln28_93_fu_3429_p2 = (tmp_1_reg_3813 | 15'd94);

assign or_ln28_94_fu_3440_p2 = (tmp_1_reg_3813 | 15'd95);

assign or_ln28_95_fu_3451_p2 = (tmp_1_reg_3813 | 15'd96);

assign or_ln28_96_fu_3462_p2 = (tmp_1_reg_3813 | 15'd97);

assign or_ln28_97_fu_3473_p2 = (tmp_1_reg_3813 | 15'd98);

assign or_ln28_98_fu_3484_p2 = (tmp_1_reg_3813 | 15'd99);

assign or_ln28_99_fu_3495_p2 = (tmp_1_reg_3813 | 15'd100);

assign or_ln28_9_fu_2505_p2 = (tmp_1_reg_3813 | 15'd10);

assign or_ln28_fu_2400_p2 = (tmp_1_fu_2386_p3 | 15'd1);

assign tmp_1_fu_2386_p3 = {{trunc_ln1073_fu_2370_p1}, {7'd0}};

assign trunc_ln1073_fu_2370_p1 = ap_sig_allocacmp_i_V_1[7:0];

assign zext_ln28_100_fu_3500_p1 = or_ln28_99_fu_3495_p2;

assign zext_ln28_101_fu_3511_p1 = or_ln28_100_fu_3506_p2;

assign zext_ln28_102_fu_3522_p1 = or_ln28_101_fu_3517_p2;

assign zext_ln28_103_fu_3533_p1 = or_ln28_102_fu_3528_p2;

assign zext_ln28_104_fu_3544_p1 = or_ln28_103_fu_3539_p2;

assign zext_ln28_105_fu_3555_p1 = or_ln28_104_fu_3550_p2;

assign zext_ln28_106_fu_3566_p1 = or_ln28_105_fu_3561_p2;

assign zext_ln28_107_fu_3577_p1 = or_ln28_106_fu_3572_p2;

assign zext_ln28_108_fu_3588_p1 = or_ln28_107_fu_3583_p2;

assign zext_ln28_109_fu_3599_p1 = or_ln28_108_fu_3594_p2;

assign zext_ln28_10_fu_2510_p1 = or_ln28_9_fu_2505_p2;

assign zext_ln28_110_fu_3610_p1 = or_ln28_109_fu_3605_p2;

assign zext_ln28_111_fu_3621_p1 = or_ln28_110_fu_3616_p2;

assign zext_ln28_112_fu_3632_p1 = or_ln28_111_fu_3627_p2;

assign zext_ln28_113_fu_3643_p1 = or_ln28_112_fu_3638_p2;

assign zext_ln28_114_fu_3654_p1 = or_ln28_113_fu_3649_p2;

assign zext_ln28_115_fu_3665_p1 = or_ln28_114_fu_3660_p2;

assign zext_ln28_116_fu_3676_p1 = or_ln28_115_fu_3671_p2;

assign zext_ln28_117_fu_3687_p1 = or_ln28_116_fu_3682_p2;

assign zext_ln28_118_fu_3698_p1 = or_ln28_117_fu_3693_p2;

assign zext_ln28_119_fu_3709_p1 = or_ln28_118_fu_3704_p2;

assign zext_ln28_11_fu_2521_p1 = or_ln28_10_fu_2516_p2;

assign zext_ln28_120_fu_3720_p1 = or_ln28_119_fu_3715_p2;

assign zext_ln28_121_fu_3731_p1 = or_ln28_120_fu_3726_p2;

assign zext_ln28_122_fu_3742_p1 = or_ln28_121_fu_3737_p2;

assign zext_ln28_123_fu_3753_p1 = or_ln28_122_fu_3748_p2;

assign zext_ln28_124_fu_3764_p1 = or_ln28_123_fu_3759_p2;

assign zext_ln28_125_fu_3775_p1 = or_ln28_124_fu_3770_p2;

assign zext_ln28_126_fu_3786_p1 = or_ln28_125_fu_3781_p2;

assign zext_ln28_127_fu_3797_p1 = or_ln28_126_fu_3792_p2;

assign zext_ln28_12_fu_2532_p1 = or_ln28_11_fu_2527_p2;

assign zext_ln28_13_fu_2543_p1 = or_ln28_12_fu_2538_p2;

assign zext_ln28_14_fu_2554_p1 = or_ln28_13_fu_2549_p2;

assign zext_ln28_15_fu_2565_p1 = or_ln28_14_fu_2560_p2;

assign zext_ln28_16_fu_2576_p1 = or_ln28_15_fu_2571_p2;

assign zext_ln28_17_fu_2587_p1 = or_ln28_16_fu_2582_p2;

assign zext_ln28_18_fu_2598_p1 = or_ln28_17_fu_2593_p2;

assign zext_ln28_19_fu_2609_p1 = or_ln28_18_fu_2604_p2;

assign zext_ln28_1_fu_2406_p1 = or_ln28_fu_2400_p2;

assign zext_ln28_20_fu_2620_p1 = or_ln28_19_fu_2615_p2;

assign zext_ln28_21_fu_2631_p1 = or_ln28_20_fu_2626_p2;

assign zext_ln28_22_fu_2642_p1 = or_ln28_21_fu_2637_p2;

assign zext_ln28_23_fu_2653_p1 = or_ln28_22_fu_2648_p2;

assign zext_ln28_24_fu_2664_p1 = or_ln28_23_fu_2659_p2;

assign zext_ln28_25_fu_2675_p1 = or_ln28_24_fu_2670_p2;

assign zext_ln28_26_fu_2686_p1 = or_ln28_25_fu_2681_p2;

assign zext_ln28_27_fu_2697_p1 = or_ln28_26_fu_2692_p2;

assign zext_ln28_28_fu_2708_p1 = or_ln28_27_fu_2703_p2;

assign zext_ln28_29_fu_2719_p1 = or_ln28_28_fu_2714_p2;

assign zext_ln28_2_fu_2422_p1 = or_ln28_1_fu_2417_p2;

assign zext_ln28_30_fu_2730_p1 = or_ln28_29_fu_2725_p2;

assign zext_ln28_31_fu_2741_p1 = or_ln28_30_fu_2736_p2;

assign zext_ln28_32_fu_2752_p1 = or_ln28_31_fu_2747_p2;

assign zext_ln28_33_fu_2763_p1 = or_ln28_32_fu_2758_p2;

assign zext_ln28_34_fu_2774_p1 = or_ln28_33_fu_2769_p2;

assign zext_ln28_35_fu_2785_p1 = or_ln28_34_fu_2780_p2;

assign zext_ln28_36_fu_2796_p1 = or_ln28_35_fu_2791_p2;

assign zext_ln28_37_fu_2807_p1 = or_ln28_36_fu_2802_p2;

assign zext_ln28_38_fu_2818_p1 = or_ln28_37_fu_2813_p2;

assign zext_ln28_39_fu_2829_p1 = or_ln28_38_fu_2824_p2;

assign zext_ln28_3_fu_2433_p1 = or_ln28_2_fu_2428_p2;

assign zext_ln28_40_fu_2840_p1 = or_ln28_39_fu_2835_p2;

assign zext_ln28_41_fu_2851_p1 = or_ln28_40_fu_2846_p2;

assign zext_ln28_42_fu_2862_p1 = or_ln28_41_fu_2857_p2;

assign zext_ln28_43_fu_2873_p1 = or_ln28_42_fu_2868_p2;

assign zext_ln28_44_fu_2884_p1 = or_ln28_43_fu_2879_p2;

assign zext_ln28_45_fu_2895_p1 = or_ln28_44_fu_2890_p2;

assign zext_ln28_46_fu_2906_p1 = or_ln28_45_fu_2901_p2;

assign zext_ln28_47_fu_2917_p1 = or_ln28_46_fu_2912_p2;

assign zext_ln28_48_fu_2928_p1 = or_ln28_47_fu_2923_p2;

assign zext_ln28_49_fu_2939_p1 = or_ln28_48_fu_2934_p2;

assign zext_ln28_4_fu_2444_p1 = or_ln28_3_fu_2439_p2;

assign zext_ln28_50_fu_2950_p1 = or_ln28_49_fu_2945_p2;

assign zext_ln28_51_fu_2961_p1 = or_ln28_50_fu_2956_p2;

assign zext_ln28_52_fu_2972_p1 = or_ln28_51_fu_2967_p2;

assign zext_ln28_53_fu_2983_p1 = or_ln28_52_fu_2978_p2;

assign zext_ln28_54_fu_2994_p1 = or_ln28_53_fu_2989_p2;

assign zext_ln28_55_fu_3005_p1 = or_ln28_54_fu_3000_p2;

assign zext_ln28_56_fu_3016_p1 = or_ln28_55_fu_3011_p2;

assign zext_ln28_57_fu_3027_p1 = or_ln28_56_fu_3022_p2;

assign zext_ln28_58_fu_3038_p1 = or_ln28_57_fu_3033_p2;

assign zext_ln28_59_fu_3049_p1 = or_ln28_58_fu_3044_p2;

assign zext_ln28_5_fu_2455_p1 = or_ln28_4_fu_2450_p2;

assign zext_ln28_60_fu_3060_p1 = or_ln28_59_fu_3055_p2;

assign zext_ln28_61_fu_3071_p1 = or_ln28_60_fu_3066_p2;

assign zext_ln28_62_fu_3082_p1 = or_ln28_61_fu_3077_p2;

assign zext_ln28_63_fu_3093_p1 = or_ln28_62_fu_3088_p2;

assign zext_ln28_64_fu_3104_p1 = or_ln28_63_fu_3099_p2;

assign zext_ln28_65_fu_3115_p1 = or_ln28_64_fu_3110_p2;

assign zext_ln28_66_fu_3126_p1 = or_ln28_65_fu_3121_p2;

assign zext_ln28_67_fu_3137_p1 = or_ln28_66_fu_3132_p2;

assign zext_ln28_68_fu_3148_p1 = or_ln28_67_fu_3143_p2;

assign zext_ln28_69_fu_3159_p1 = or_ln28_68_fu_3154_p2;

assign zext_ln28_6_fu_2466_p1 = or_ln28_5_fu_2461_p2;

assign zext_ln28_70_fu_3170_p1 = or_ln28_69_fu_3165_p2;

assign zext_ln28_71_fu_3181_p1 = or_ln28_70_fu_3176_p2;

assign zext_ln28_72_fu_3192_p1 = or_ln28_71_fu_3187_p2;

assign zext_ln28_73_fu_3203_p1 = or_ln28_72_fu_3198_p2;

assign zext_ln28_74_fu_3214_p1 = or_ln28_73_fu_3209_p2;

assign zext_ln28_75_fu_3225_p1 = or_ln28_74_fu_3220_p2;

assign zext_ln28_76_fu_3236_p1 = or_ln28_75_fu_3231_p2;

assign zext_ln28_77_fu_3247_p1 = or_ln28_76_fu_3242_p2;

assign zext_ln28_78_fu_3258_p1 = or_ln28_77_fu_3253_p2;

assign zext_ln28_79_fu_3269_p1 = or_ln28_78_fu_3264_p2;

assign zext_ln28_7_fu_2477_p1 = or_ln28_6_fu_2472_p2;

assign zext_ln28_80_fu_3280_p1 = or_ln28_79_fu_3275_p2;

assign zext_ln28_81_fu_3291_p1 = or_ln28_80_fu_3286_p2;

assign zext_ln28_82_fu_3302_p1 = or_ln28_81_fu_3297_p2;

assign zext_ln28_83_fu_3313_p1 = or_ln28_82_fu_3308_p2;

assign zext_ln28_84_fu_3324_p1 = or_ln28_83_fu_3319_p2;

assign zext_ln28_85_fu_3335_p1 = or_ln28_84_fu_3330_p2;

assign zext_ln28_86_fu_3346_p1 = or_ln28_85_fu_3341_p2;

assign zext_ln28_87_fu_3357_p1 = or_ln28_86_fu_3352_p2;

assign zext_ln28_88_fu_3368_p1 = or_ln28_87_fu_3363_p2;

assign zext_ln28_89_fu_3379_p1 = or_ln28_88_fu_3374_p2;

assign zext_ln28_8_fu_2488_p1 = or_ln28_7_fu_2483_p2;

assign zext_ln28_90_fu_3390_p1 = or_ln28_89_fu_3385_p2;

assign zext_ln28_91_fu_3401_p1 = or_ln28_90_fu_3396_p2;

assign zext_ln28_92_fu_3412_p1 = or_ln28_91_fu_3407_p2;

assign zext_ln28_93_fu_3423_p1 = or_ln28_92_fu_3418_p2;

assign zext_ln28_94_fu_3434_p1 = or_ln28_93_fu_3429_p2;

assign zext_ln28_95_fu_3445_p1 = or_ln28_94_fu_3440_p2;

assign zext_ln28_96_fu_3456_p1 = or_ln28_95_fu_3451_p2;

assign zext_ln28_97_fu_3467_p1 = or_ln28_96_fu_3462_p2;

assign zext_ln28_98_fu_3478_p1 = or_ln28_97_fu_3473_p2;

assign zext_ln28_99_fu_3489_p1 = or_ln28_98_fu_3484_p2;

assign zext_ln28_9_fu_2499_p1 = or_ln28_8_fu_2494_p2;

assign zext_ln28_fu_2394_p1 = tmp_1_fu_2386_p3;

always @ (posedge ap_clk) begin
    tmp_1_reg_3813[6:0] <= 7'b0000000;
end

endmodule //coloringFB_i1_coloringFB_i1_Pipeline_COLORING_FB_INIT_ROW
